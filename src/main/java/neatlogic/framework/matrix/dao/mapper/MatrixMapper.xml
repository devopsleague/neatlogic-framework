<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neatlogic.framework.matrix.dao.mapper.MatrixMapper">

	<select id="getMatrixByUuid" parameterType="String" resultType="neatlogic.framework.matrix.dto.MatrixVo">
		SELECT
			`id`,
			`uuid`,
			`name`,
			`label`,
			`type`,
			`fcu`,
			`fcd`,
			`lcu`,
			`lcd`
		FROM `matrix`
		WHERE `uuid` = #{uuid}
	</select>

	<select id="getMatrixByLabel" parameterType="String" resultType="neatlogic.framework.matrix.dto.MatrixVo">
		SELECT
			`id`,
			`uuid`,
			`name`,
			`label`,
			`type`,
			`fcu`,
			`fcd`,
			`lcu`,
			`lcd`
		FROM `matrix`
		WHERE `label` = #{value}
	</select>

	<select id="checkMatrixIsExists" parameterType="java.lang.String" resultType="int">
		SELECT COUNT(`uuid`) FROM `matrix` WHERE `uuid` = #{uuid}
	</select>

	<select id="checkMatrixNameIsRepeat" parameterType="neatlogic.framework.matrix.dto.MatrixVo" resultType="int">
		SELECT COUNT(1) FROM `matrix` WHERE `name` = #{name} AND `uuid` != #{uuid}
	</select>

	<select id="checkMatrixLabelIsRepeat" parameterType="neatlogic.framework.matrix.dto.MatrixVo" resultType="int">
		SELECT COUNT(1) FROM `matrix` WHERE `label` = #{label} AND `uuid` != #{uuid}
	</select>

	<select id="getMatrixListByUuidList" parameterType="String" resultType="neatlogic.framework.matrix.dto.MatrixVo">
		SELECT
		`id`,
		`uuid`,
		`name`,
		`label`,
		`type`,
		`fcu`,
		`fcd`,
		`lcu`,
		`lcd`
		FROM `matrix`
		WHERE `uuid` IN
		<foreach collection="list" item="uuid" open="(" separator="," close=")">
			#{uuid}
		</foreach>
	</select>

	<select id="searchMatrixCount" parameterType="neatlogic.framework.matrix.dto.MatrixVo" resultType="int">
		SELECT
		COUNT(1)
		FROM `matrix`
		<where>
			<if test="type != null and type != ''">
				AND `type` = #{type}
			</if>
			<if test="keyword != null and keyword != ''">
				AND (`name` LIKE CONCAT('%', #{keyword}, '%') OR `uuid` LIKE CONCAT('%', #{keyword}, '%') OR `label` LIKE CONCAT('%', #{keyword}, '%'))
			</if>
		</where>
	</select>

	<resultMap id="matrixMap" type="neatlogic.framework.matrix.dto.MatrixVo">
		<id property="uuid" column="uuid"/>
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="label" column="label"/>
		<result property="type" column="type"/>
		<result property="fcu" column="fcu"/>
		<result property="fcd" column="fcd"/>
		<result property="lcu" column="lcu"/>
		<result property="lcd" column="lcd"/>
	</resultMap>

	<select id="searchMatrix" resultMap="matrixMap">
			SELECT 
			`id`,
			`uuid`,
			`name`,
			`label`,
			`type`,
			`fcu`,
			`fcd`,
			`lcu`,
			`lcd`
			FROM `matrix`
			<where>
				<if test="type != null and type != ''">
					AND `type` = #{type}
				</if>
				<if test="keyword != null and keyword != ''">
					AND (`name` LIKE CONCAT('%', #{keyword}, '%') OR `uuid` LIKE CONCAT('%', #{keyword}, '%') OR `label` LIKE CONCAT('%', #{keyword}, '%'))
				</if>
			</where>
			ORDER BY `id` desc
			LIMIT #{startNum}, #{pageSize}
	</select>

	<select id="getMatrixExternalByMatrixUuid" parameterType="string" resultType="neatlogic.framework.matrix.dto.MatrixExternalVo">
		SELECT
			`matrix_uuid` AS matrixUuid,
			`integration_uuid` AS integrationUuid
		FROM `matrix_external`
		WHERE `matrix_uuid` = #{matrixUuid}
	</select>

	<select id="getMatrixViewByMatrixUuid" parameterType="string" resultType="neatlogic.framework.matrix.dto.MatrixViewVo">
		SELECT
			`matrix_uuid` AS matrixUuid,
			`file_name` AS fileName,
			`config`,
		    `xml`
		FROM `matrix_view`
		WHERE `matrix_uuid` = #{matrixUuid}
	</select>

	<select id="getMatrixViewCount" resultType="int">
		SELECT COUNT(1) FROM `matrix_view`
	</select>

	<select id="getMatrixViewList" parameterType="neatlogic.framework.common.dto.BasePageVo" resultType="neatlogic.framework.matrix.dto.MatrixViewVo">
		SELECT
			`matrix_uuid` AS matrixUuid,
			`file_name` AS fileName,
			`config`,
		    `xml`
		FROM `matrix_view`
		ORDER BY `matrix_uuid`
		LIMIT #{startNum}, #{pageSize}
	</select>

	<select id="getMatrixCiByMatrixUuid" parameterType="string" resultType="neatlogic.framework.matrix.dto.MatrixCiVo">
		SELECT
			`matrix_uuid` AS matrixUuid,
			`ci_id` AS ciId,
			`config` AS configStr
		FROM `matrix_ci`
		WHERE `matrix_uuid` = #{matrixUuid}
	</select>

	<select id="getMatrixCmdbCustomViewByMatrixUuid" parameterType="string" resultType="neatlogic.framework.matrix.dto.MatrixCmdbCustomViewVo">
		SELECT
			`matrix_uuid` AS matrixUuid,
			`custom_view_id` AS customViewId,
			`config` AS configStr
		FROM `matrix_cmdb_custom_view`
		WHERE `matrix_uuid` = #{matrixUuid}
	</select>

	<insert id="insertMatrix" parameterType="neatlogic.framework.matrix.dto.MatrixVo" >
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO `matrix` (
		`uuid`,
		`name`,
		`label`,
		`type`,
		`fcu`,
		`fcd`,
		`lcu`,
		`lcd`
		) VALUES (
		#{uuid},
		#{name},
		#{label},
		#{type},
		#{fcu},
		NOW(3),
		#{fcu},
		NOW(3)
		)
	</insert>

	<insert id="replaceMatrixExternal" parameterType="neatlogic.framework.matrix.dto.MatrixExternalVo">
		REPLACE INTO
		`matrix_external`(
			`matrix_uuid`,
			`integration_uuid`
		) VALUES (
		#{matrixUuid},
		#{integrationUuid}
		)
	</insert>

	<insert id="insertMatrixView" parameterType="neatlogic.framework.matrix.dto.MatrixViewVo">
		INSERT INTO `matrix_view`(
			`matrix_uuid`,
			`file_name`,
			`config`,
			`xml`
		) VALUES (
			#{matrixUuid},
			#{fileName},
			#{config},
			#{xml}
		) ON DUPLICATE KEY UPDATE
		`file_name` = #{fileName},
		`config` = #{config},
		`xml` = #{xml}
	</insert>

	<insert id="replaceMatrixCi" parameterType="neatlogic.framework.matrix.dto.MatrixCiVo">
		REPLACE INTO `matrix_ci`(
			`matrix_uuid`,
			`ci_id`,
			`config`
		) VALUES (
		#{matrixUuid},
		#{ciId},
		#{configStr}
		)
	</insert>

	<insert id="replaceMatrixCmdbCustomView" parameterType="neatlogic.framework.matrix.dto.MatrixCiVo">
		REPLACE INTO `matrix_cmdb_custom_view`(
			`matrix_uuid`,
			`custom_view_id`,
			`config`
		) VALUES (
		#{matrixUuid},
		#{customViewId},
		#{configStr}
		)
	</insert>

	<update id="updateMatrixNameAndLcu" parameterType="neatlogic.framework.matrix.dto.MatrixVo">
		UPDATE `matrix` SET
		 `name` = #{name},
		 `lcu` = #{lcu},
		 `lcd` = NOW(3)
		 WHERE `uuid` = #{uuid}
	</update>

	<delete id="deleteMatrixByUuid" parameterType="string">
		DELETE FROM `matrix` WHERE `uuid` = #{value}
	</delete>

	<delete id="deleteMatrixExternalByMatrixUuid" parameterType="String">
		DELETE FROM `matrix_external` WHERE `matrix_uuid` = #{value}
	</delete>

	<delete id="deleteMatrixViewByMatrixUuid" parameterType="String">
		DELETE FROM `matrix_view` WHERE `matrix_uuid` = #{value}
	</delete>

	<delete id="deleteMatrixCiByMatrixUuid" parameterType="String">
		DELETE FROM `matrix_ci` WHERE `matrix_uuid` = #{value}
	</delete>

	<delete id="deleteMatrixCmdbCustomViewByMatrixUuid" parameterType="String">
		DELETE FROM `matrix_cmdb_custom_view` WHERE `matrix_uuid` = #{value}
	</delete>
</mapper>
