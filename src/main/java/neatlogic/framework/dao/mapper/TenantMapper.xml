<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neatlogic.framework.dao.mapper.TenantMapper">

    <select id="getTenantAuditDetailByHash" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT `content`
        FROM `tenant_audit_detail`
        WHERE `hash` = #{value}
    </select>

    <select id="getTenantModuleGroupByTenantId" parameterType="java.lang.Long"
            resultType="neatlogic.framework.dto.TenantModuleGroupVo">
        SELECT `tenant_id`    as tenantId,
               `tenant_uuid`  as tenantUuid,
               `module_group` AS moduleGroup
        FROM `tenant_modulegroup`
        WHERE tenant_id = #{value}
    </select>

    <select id="getTenantModuleByTenantId" parameterType="java.lang.Long"
            resultType="neatlogic.framework.dto.TenantModuleVo">
        SELECT `tenant_id`  AS tenantId,
               `module_id`  as moduleId,
               `ddl_status` as ddlStatus,
               `dml_status` as dmlStatus
        FROM `tenant_module`
        WHERE tenant_id = #{value}
    </select>

    <sql id="searchTenantAuditCondition">
        <where>
            tenant_id = #{tenantId}
            <if test="groupId != null">
                AND group_id = #{groupId}
            </if>
        </where>
    </sql>

    <select id="searchTenantAudit" parameterType="neatlogic.framework.dto.TenantAuditVo"
            resultType="neatlogic.framework.dto.TenantAuditVo">
        SELECT
        `id`,
        `group_id` AS groupId,
        `tenant_id` as tenantId,
        `module_id` as moduleId,
        `module_group` as moduleGroup,
        `sql_type` as sqlType,
        `start_time` as startTime,
        `end_time` as endTime,
        (UNIX_TIMESTAMP(IFNULL(end_time, NOW(3)))*1000 - UNIX_TIMESTAMP(start_time)*1000) AS timeCost,
        `result_hash` as resultHash,
        `error_hash` as errorHash,
        `status`
        FROM
        `tenant_audit`
        <include refid="searchTenantAuditCondition"/>
        ORDER BY id DESC
    </select>

    <select id="searchTenantAuditCount" parameterType="neatlogic.framework.dto.TenantAuditVo" resultType="int">
        SELECT
        COUNT(1)
        FROM
        `tenant_audit`
        <include refid="searchTenantAuditCondition"/>
    </select>

    <sql id="searchTenantCondition">
        <where>
            <if test="keyword != null and keyword != ''">
                AND name LIKE concat('%', #{keyword}, '#')
            </if>
        </where>
    </sql>

    <select id="searchTenant" parameterType="neatlogic.framework.dto.TenantVo"
            resultType="neatlogic.framework.dto.TenantVo">
        SELECT
        `id`,
        `uuid`,
        `name`,
        `is_active` AS isActive,
        `expire_date` AS expireDate,
        `status`,
        `error_msg` as errorMsg,
        `description`
        FROM
        `tenant`
        <include refid="searchTenantCondition"/>
        ORDER BY id DESC
    </select>

    <select id="searchTenantCount" parameterType="neatlogic.framework.dto.TenantVo" resultType="int">
        SELECT
        COUNT(1)
        FROM
        `tenant`
        <include refid="searchTenantCondition"/>
    </select>

    <select id="checkTenantUuidIsExists" parameterType="neatlogic.framework.dto.TenantVo" resultType="int">
        SELECT COUNT(1)
        FROM `tenant`
        WHERE uuid = #{uuid}
          and id != #{id}
    </select>

    <select id="getTenantByUuid" parameterType="java.lang.String" resultType="neatlogic.framework.dto.TenantVo">
        SELECT `id`,
               `uuid`,
               `name`,
               `is_active`   AS isActive,
               `expire_date` AS expireDate,
               `status`,
               `description`
        FROM `tenant`
        WHERE `uuid` = #{value}
    </select>

    <select id="getTenantById" parameterType="java.lang.Long" resultType="neatlogic.framework.dto.TenantVo">
        SELECT `id`,
               `uuid`,
               `name`,
               `is_active`    AS isActive,
               `is_need_demo` AS isNeedDemo,
               `expire_date`  AS expireDate,
               `status`,
               `error_msg`    as errorMsg,
               `description`
        FROM `tenant`
        WHERE `id` = #{value}
    </select>

    <select id="getAllActiveTenant" resultType="neatlogic.framework.dto.TenantVo">
        SELECT t.`uuid`,
               t.`name`
        FROM `tenant` t
                 JOIN `datasource` ds ON ds.`tenant_uuid` = t.`uuid`
        WHERE t.`is_active` = 1
    </select>
    <select id="getTenantAuditMaxGroupIdByTenantId" resultType="java.lang.Long">
        select max(group_id)
        from tenant_audit
        where tenant_id = #{value}
    </select>
    <select id="getTenantModuleDmlSqlMd5ByTenantUuidAndModuleId" resultType="java.lang.String">
        select sql_uuid
        from tenant_module_dmlsql
        where tenant_uuid = #{tenantUuid}
          and `module_id` = #{moduleId}
    </select>

    <insert id="insertTenant" parameterType="neatlogic.framework.dto.TenantVo">
        INSERT INTO `tenant` (`id`,
                              `uuid`,
                              `name`,
                              `is_active`,
                              `expire_date`,
                              `status`,
                              `description`)
        VALUES (#{id},
                #{uuid},
                #{name},
                #{isActive},
                #{expireDate},
                #{status},
                #{description})
    </insert>

    <insert id="insertTenantModuleGroup">
        INSERT INTO `tenant_modulegroup` (`tenant_id`, `tenant_uuid`, `module_group`)
        VALUES (#{tenantId}, #{tenantUuid}, #{moduleGroup})
    </insert>

    <insert id="insertTenantAudit" parameterType="neatlogic.framework.dto.TenantAuditVo">
        INSERT INTO `tenant_audit` (`id`,
                                    `tenant_id`,
                                    `group_id`,
                                    `start_time`,
                                    `module_id`,
                                    `module_group`,
                                    `sql_type`,
                                    `status`)
        VALUES (#{id},
                #{tenantId},
                #{groupId},
                NOW(3),
                #{moduleId},
                #{moduleGroup},
                #{sqlType},
                #{status})
    </insert>

    <insert id="replaceTenantAuditDetail">
        REPLACE INTO `tenant_audit_detail` (`hash`, `content`)
        VALUES (#{hash}, #{content})
    </insert>

    <insert id="insertTenantModule" parameterType="neatlogic.framework.dto.TenantModuleVo">
        INSERT IGNORE INTO `tenant_module` (`tenant_id`,
                                            `module_id`,
                                            `fcd`)
        VALUES (#{tenantModule.tenantId},
                #{tenantModule.moduleId},
                NOW(3))
    </insert>
    <insert id="insertTenantModuleDmlSql">
        insert into `tenant_module_dmlsql` (`tenant_uuid`,`module_id`,`sql_uuid`,`sql_status`,`fcd`)
        values
        <foreach collection="currentRunSqlMd5List" item="sqlMd5" separator="),(" open="(" close=")">
            #{tenantUuid},#{moduleId},#{sqlMd5},#{sqlStatus},now()
        </foreach>
    </insert>

    <update id="updateTenantAudit" parameterType="neatlogic.framework.dto.TenantAuditVo">
        UPDATE
            `tenant_audit`
        SET `result_hash` = #{resultHash},
            `error_hash`  = #{errorHash},
            `sql_type`    = #{sqlType},
            `end_time`    = NOW(3),
            `status`      = #{status}
        WHERE `id` = #{id}
    </update>

    <update id="updateTenant" parameterType="neatlogic.framework.dto.TenantVo">
        UPDATE
            `tenant`
        SET `name`        = #{name},
            `is_active`   = #{isActive},
            `expire_date` = #{expireDate},
            `description` = #{description},
            `status`      = #{status},
            `error_msg`   = #{errorMsg}
        WHERE `id` = #{id}
    </update>

    <update id="updateTenantIsActive" parameterType="neatlogic.framework.dto.TenantVo">
        UPDATE
            `tenant`
        SET `is_active` = #{isActive}
        WHERE `id` = #{id}
    </update>

    <update id="updateTenantStatus" parameterType="neatlogic.framework.dto.TenantVo">
        UPDATE
            `tenant`
        SET `status` = #{status}
        WHERE `id` = #{id}
    </update>

    <update id="updateTenantModule" parameterType="neatlogic.framework.dto.TenantModuleVo">
        UPDATE
        `tenant_module`
        SET `lcd` = NOW(3)
        <if test="ddlStatus != null">
            ,`ddl_status` = #{ddlStatus}
        </if>
        <if test="dmlStatus != null">
            ,`dml_status` = #{dmlStatus}
        </if>
        WHERE `tenant_id` = #{tenantId}
        AND `module_id` = #{moduleId}
    </update>

    <delete id="deleteTenantModuleGroupByTenantId" parameterType="java.lang.Long">
        DELETE
        FROM `tenant_modulegroup`
        WHERE `tenant_id` = #{value}
    </delete>

    <delete id="deleteTenantModuleByTenantId" parameterType="java.lang.Long">
        DELETE
        FROM `tenant_module`
        WHERE `tenant_id` = #{value}
    </delete>
</mapper>

