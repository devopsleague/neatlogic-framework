<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Copyright(c) 2023 NeatLogic Co., Ltd. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neatlogic.framework.dao.mapper.UserSessionMapper">
    <cache type="neatlogic.framework.dao.cache.NeatLogicCache" flushInterval="30000" size="100"/>

    <select id="getUserSessionByUserUuid" parameterType="java.lang.String"
            resultType="neatlogic.framework.dto.UserSessionVo" useCache="false">
        SELECT `user_uuid` as userUuid, `visit_time` as sessionTime,`auth_info` as authInfoStr
        FROM `user_session`
        WHERE `user_uuid` = #{value}
    </select>

    <select id="getOnlineUserUuidListByUserUuidListAndTeamUuidListAndRoleUuidListAndGreaterThanSessionTimeCount"
            resultType="int">
        select
        count(1)
        from
        (
        <if test="userUuidList != null and userUuidList.size() > 0">
            SELECT
            a.`uuid`
            FROM `user` a
            JOIN `user_session` b ON b.`user_uuid` = a.`uuid` AND b.`visit_time` &gt; #{sessionTime}
            WHERE `uuid` IN
            <foreach collection="userUuidList" item="userUuid" open="(" separator="," close=")">
                #{userUuid}
            </foreach>
        </if>
        <if test="roleUuidList != null and roleUuidList.size() > 0">
            <if test="userUuidList != null and userUuidList.size() > 0">
                UNION
            </if>
            SELECT
            a.`user_uuid`
            FROM `user_role` a
            JOIN `user_session` b ON b.`user_uuid` = a.`user_uuid` AND b.`visit_time` &gt; #{sessionTime}
            WHERE `role_uuid` IN
            <foreach collection="roleUuidList" item="roleUuid" open="(" separator="," close=")">
                #{roleUuid}
            </foreach>
        </if>
        <if test="teamUuidList != null and teamUuidList.size() > 0">
            <if test="(roleUuidList != null and roleUuidList.size() > 0) || (userUuidList != null and userUuidList.size() > 0)">
                UNION
            </if>
            SELECT
            a.`user_uuid`
            FROM `user_team` a
            JOIN `user_session` b ON b.`user_uuid` = a.`user_uuid` AND b.`visit_time` &gt; #{sessionTime}
            WHERE `team_uuid` IN
            <foreach collection="teamUuidList" item="teamUuid" open="(" separator="," close=")">
                #{teamUuid}
            </foreach>
        </if>
        ) a
    </select>

    <select id="getOnlineUserUuidListByUserUuidListAndTeamUuidListAndRoleUuidListAndGreaterThanSessionTime"
            resultType="java.lang.String">
        select
        `uuid`
        from
        (
        <if test="userUuidList != null and userUuidList.size() > 0">
            SELECT
            a.`uuid` as `uuid`
            FROM `user` a
            JOIN `user_session` b ON b.`user_uuid` = a.`uuid` AND b.`visit_time` &gt; #{sessionTime}
            WHERE `uuid` IN
            <foreach collection="userUuidList" item="userUuid" open="(" separator="," close=")">
                #{userUuid}
            </foreach>
        </if>
        <if test="roleUuidList != null and roleUuidList.size() > 0">
            <if test="userUuidList != null and userUuidList.size() > 0">
                UNION
            </if>
            SELECT
            a.`user_uuid` as `uuid`
            FROM `user_role` a
            JOIN `user_session` b ON b.`user_uuid` = a.`user_uuid` AND b.`visit_time` &gt; #{sessionTime}
            WHERE `role_uuid` IN
            <foreach collection="roleUuidList" item="roleUuid" open="(" separator="," close=")">
                #{roleUuid}
            </foreach>
        </if>
        <if test="teamUuidList != null and teamUuidList.size() > 0">
            <if test="(roleUuidList != null and roleUuidList.size() > 0) || (userUuidList != null and userUuidList.size() > 0)">
                UNION
            </if>
            SELECT
            a.`user_uuid` as `uuid`
            FROM `user_team` a
            JOIN `user_session` b ON b.`user_uuid` = a.`user_uuid` AND b.`visit_time` &gt; #{sessionTime}
            WHERE `team_uuid` IN
            <foreach collection="teamUuidList" item="teamUuid" open="(" separator="," close=")">
                #{teamUuid}
            </foreach>
        </if>
        ) a
        <if test="needPage">
            limit #{startNum},#{pageSize}
        </if>
    </select>

    <select id="getAllOnlineUserCount" parameterType="java.util.Date" resultType="int">
        SELECT count(1)
        FROM `user` a
                 JOIN `user_session` b ON b.`user_uuid` = a.`uuid` AND b.`visit_time` &gt; #{value}
    </select>

    <select id="getAllOnlineUser" resultType="java.lang.String">
        SELECT a.`uuid`
        FROM `user` a
                 JOIN `user_session` b ON b.`user_uuid` = a.`uuid` AND b.`visit_time` &gt; #{sessionTime}
        limit #{startNum},#{pageSize}
    </select>
    <select id="getUserSessionCountByDate" resultType="java.lang.Integer">
        SELECT count(1)
        FROM `user_session` b where b.`visit_time` &gt;= #{value}
    </select>

    <insert id="insertUserSession" parameterType="java.lang.String">
        INSERT INTO `user_session` (`user_uuid`, `visit_time`,`auth_info`)
        VALUES (#{userUuid}, NOW(3), #{authInfo})
        ON DUPLICATE KEY
            UPDATE `visit_time` = NOW(3)
    </insert>

    <update id="updateUserSession" parameterType="java.lang.String">
        UPDATE `user_session`
        set `visit_time` = now(3)
        WHERE `user_uuid` = #{userUuid}
    </update>

    <delete id="deleteUserSessionByUserUuid" parameterType="java.lang.String">
        DELETE
        FROM `user_session`
        where `user_uuid` = #{value}
    </delete>

</mapper>

