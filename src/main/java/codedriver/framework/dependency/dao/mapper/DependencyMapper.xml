<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright(c) 2021 TechSureCo.,Ltd.AllRightsReserved.
  ~ 本内容仅限于深圳市赞悦科技有限公司内部传阅，禁止外泄以及用于其他的商业项目。
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.dependency.dao.mapper.DependencyMapper">

    <select id="getCallerListByCallee" resultType="java.util.HashMap">
        SELECT *
        FROM `${tableName}`
        WHERE `${calleeField}` = #{callee} LIMIT #{startNum}
            , #{pageSize}
    </select>

    <select id="getCallerCountByCallee" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM `${tableName}`
        WHERE `${calleeField}` = #{callee}
    </select>

    <select id="getBatchCallerCountByCallee" resultType="java.util.Map">
        SELECT `${calleeField}` as caller,
        COUNT(1) as callerCount
        FROM `${tableName}`
        WHERE `${calleeField}` in
        <foreach collection="callee" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY `${calleeField}`
    </select>

    <insert id="insertIgnoreDependencyForCallerField">
        INSERT
        IGNORE INTO `${tableName}` (`${callerField}`, `${calleeField}`)
        VALUES (
        #{caller},
        #{callee}
        )
    </insert>

    <insert id="insertIgnoreDependencyForCallerFieldList">
        INSERT IGNORE INTO `${tableName}` (`${calleeField}`,
        <foreach collection="callerFieldList" item="callerField" separator=",">
            `${callerField}`
        </foreach>
        )
        VALUES (#{callee},
        <foreach collection="callerArray" item="caller" separator=",">
            #{caller}
        </foreach>
        )
    </insert>

    <delete id="deleteDependencyByCaller">
        DELETE
        FROM `${tableName}`
        WHERE `${callerField}` = #{caller}
    </delete>

    <select id="getDependencyCountByFrom" parameterType="java.lang.String" resultType="int">
        SELECT COUNT(1)
        FROM `dependency`
        WHERE `from` = #{value}
    </select>

    <select id="getDependencyListByFrom" resultType="codedriver.framework.dependency.dto.DependencyVo">
        SELECT `from`,
               `type`,
               `to`,
               `config` AS configStr
        FROM `dependency`
        WHERE `from` = #{from}
          AND `type` = #{type} LIMIT #{startNum}
            , #{pageSize}
    </select>

    <insert id="insertDependency" parameterType="codedriver.framework.dependency.dto.DependencyVo">
        INSERT INTO `dependency` (`from`, `type`, `to`, `config`)
        VALUES (#{from}, #{type}, #{to}, #{configStr})
    </insert>

    <delete id="deleteDependency" parameterType="codedriver.framework.dependency.dto.DependencyVo">
        DELETE
        FROM `dependency`
        WHERE `type` = #{type}
          AND `to` = #{to}
    </delete>

</mapper>