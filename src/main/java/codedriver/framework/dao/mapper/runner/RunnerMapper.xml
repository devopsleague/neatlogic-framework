<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c)  2021 TechSure Co.,Ltd.  All Rights Reserved.
  ~ 本内容仅限于深圳市赞悦科技有限公司内部传阅，禁止外泄以及用于其他的商业项目。
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.dao.mapper.runner.RunnerMapper">

    <select id="getAllNetworkMask" resultType="codedriver.framework.dto.runner.GroupNetworkVo">
        SELECT `id`,
               `group_id`   as groupId,
               `network_ip` as networkIp,
               `mask`
        FROM `runnergroup_network`
    </select>

    <resultMap id="runnerGroupMap" type="codedriver.framework.dto.runner.RunnerGroupVo">
        <id column="id" property="id"/>
        <result column="groupName" property="name"/>
        <collection property="networkList" ofType="codedriver.framework.dto.runner.GroupNetworkVo">
            <id column="networkId" property="id"/>
            <result column="groupId" property="groupId"/>
            <result column="networkIp" property="networkIp"/>
            <result column="mask" property="mask"/>
        </collection>
        <collection property="runnerMapList" ofType="codedriver.framework.dto.runner.RunnerMapVo">
            <id column="runnerId" property="id"/>
            <result column="runnerName" property="name"/>
            <result column="runnerMapId" property="runnerMapId"/>
            <result column="url" property="url"/>
            <result column="accessKey" property="accessKey"/>
            <result column="accessSecret" property="accessSecret"/>
            <result column="authMode" property="authType"/>
        </collection>
    </resultMap>

    <select id="getRunnerGroupById" resultMap="runnerGroupMap">
        SELECT a.id                                  id,
               a.name                                groupName,
               c.id                               AS runnerId,
               IF(d.`id` IS NULL, c.`id`, d.`id`) AS runnerMapId,
               c.`auth_type`                      AS authType,
               c.`access_key`                     AS accessKey,
               c.`access_secret`
                                                  AS accessSecret,
               c.`url`                            AS url,
               c.`name`                           AS runnerName,
               b.id                                  networkId,
               b.group_id                            groupId,
               b.network_ip                          networkIp,
               b.mask                                mask
        FROM `runnergroup` a
                 LEFT JOIN `runnergroup_network` b ON a.id = b.group_id
                 LEFT JOIN `runner` c ON a.id = c.group_id
                 LEFT JOIN `runner_map` d ON c.id = d.`runner_id`
        WHERE a.id = #{id}
    </select>
    <select id="getAllRunnerMap" resultType="codedriver.framework.dto.runner.RunnerMapVo">
        SELECT ar.`id`,
               ar.`name`,
               ar.`url`,
               ar.`host`,
               ar.`port`,
               ar.`access_key`                         AS accessKey,
               ar.`access_secret`                      AS accessSecret,
               ar.`auth_type`                          AS authType,
               ar.`public_key`                         AS publicKey,
               ar.`private_key`                        AS privateKey,
               ar.`group_id`                           AS groupId,
               IF(arm.`id` IS NULL, ar.`id`, arm.`id`) AS runnerMapId
        FROM `runner` ar
                 LEFT JOIN `runner_map` arm ON ar.`id` = arm.`runner_id`
    </select>

    <select id="getRunnerById" resultType="codedriver.framework.dto.runner.RunnerVo">
        SELECT `id`,
               `name`,
               `url`,
               `host`,
               `port`,
               `access_key`    as accessKey,
               `access_secret` as accessSecret,
               `auth_type`     as authType,
               `public_key`    as publicKey,
               `private_key`   as privateKey,
               `group_id`      as groupId
        FROM `runner`
        WHERE `id` = #{value}
    </select>

    <insert id="insertRunnerMap">
        INSERT IGNORE INTO `runner_map` (`id`, `runner_id`)
        VALUES (#{runnerMapId}, #{id});
    </insert>
</mapper>

