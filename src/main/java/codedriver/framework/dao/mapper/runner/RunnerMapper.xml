<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c)  2021 TechSure Co.,Ltd.  All Rights Reserved.
  ~ 本内容仅限于深圳市赞悦科技有限公司内部传阅，禁止外泄以及用于其他的商业项目。
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.dao.mapper.runner.RunnerMapper">

    <select id="getAllNetworkMask" resultType="codedriver.framework.dto.runner.GroupNetworkVo">
        SELECT `id`,
               `group_id`   as groupId,
               `network_ip` as networkIp,
               `mask`
        FROM `runnergroup_network`
    </select>

    <resultMap id="runnerGroupMap" type="codedriver.framework.dto.runner.RunnerGroupVo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <collection property="networkList" ofType="codedriver.framework.dto.runner.GroupNetworkVo">
            <id column="networkId" property="id"/>
            <result column="groupId" property="groupId"/>
            <result column="networkIp" property="networkIp"/>
            <result column="mask" property="mask"/>
        </collection>
        <collection property="runnerMapList" ofType="codedriver.framework.dto.runner.RunnerMapVo">
            <id column="runnerId" property="id"/>
            <result column="runnerName" property="name"/>
            <result column="runnerMapId" property="runnerMapId"/>
            <result column="url" property="url"/>
            <result column="accessKey" property="accessKey"/>
            <result column="accessSecret" property="accessSecret"/>
            <result column="authMode" property="authType"/>
        </collection>
    </resultMap>

    <resultMap id="runnerMap" type="codedriver.framework.dto.runner.RunnerVo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="url" property="url"/>
        <result column="nettyPort" property="nettyPort"/>
        <result column="groupId" property="groupId"/>
        <result column="host" property="host"/>
        <result column="port" property="port"/>
        <collection property="runnerAuthList" ofType="codedriver.framework.dto.runner.RunnerAuthVo">
            <result column="authType" property="authType"/>
            <result column="accessKey" property="accessKey"/>
            <result column="accessSecret" property="accessSecret"/>
        </collection>
    </resultMap>

    <select id="getRunnerGroupById" resultMap="runnerGroupMap">
        SELECT a.id              id,
               a.name            name,
               c.id           AS runnerId,
               d.`id`         AS runnerMapId,
               c.`auth_type`  AS authType,
               c.`access_key` AS accessKey,
               c.`access_secret`
                              AS accessSecret,
               c.`url`        AS url,
               c.`name`       AS runnerName,
               b.id              networkId,
               b.group_id        groupId,
               b.network_ip      networkIp,
               b.mask            mask
        FROM `runnergroup` a
                 LEFT JOIN `runnergroup_network` b ON a.id = b.group_id
                 LEFT JOIN `runner` c ON a.id = c.group_id
                 LEFT JOIN `runner_map` d ON c.id = d.`runner_id`
        WHERE a.id = #{id}
    </select>
    <select id="getAllRunnerMap" resultType="codedriver.framework.dto.runner.RunnerMapVo">
        SELECT ar.`id`,
               ar.`name`,
               ar.`url`,
               ar.`host`,
               ar.`port`,
               ar.`access_key`                         AS accessKey,
               ar.`access_secret`                      AS accessSecret,
               ar.`auth_type`                          AS authType,
               ar.`public_key`                         AS publicKey,
               ar.`private_key`                        AS privateKey,
               ar.`group_id`                           AS groupId,
               IF(arm.`id` IS NULL, ar.`id`, arm.`id`) AS runnerMapId
        FROM `runner` ar
                 JOIN `runner_map` arm ON ar.`id` = arm.`runner_id`
    </select>

    <select id="getRunnerById" resultType="codedriver.framework.dto.runner.RunnerVo">
        SELECT `id`,
               `name`,
               `url`,
               `host`,
               `port`,
               `access_key`    as accessKey,
               `access_secret` as accessSecret,
               `auth_type`     as authType,
               `public_key`    as publicKey,
               `private_key`   as privateKey,
               `group_id`      as groupId
        FROM `runner`
        WHERE `id` = #{value}
    </select>

    <insert id="insertRunnerMap">
        INSERT IGNORE INTO `runner_map` (`id`, `runner_id`)
        VALUES (#{runnerMapId}, #{id});
    </insert>

    <select id="checkGroupNameIsRepeats" resultType="int"
            parameterType="codedriver.framework.dto.runner.RunnerGroupVo">
        select COUNT(1)
        from runnergroup
        where `id` != #{id}
          and `name` = #{name}
    </select>

    <update id="updateRunnerGroup" parameterType="codedriver.framework.dto.runner.RunnerGroupVo">
        update runnergroup
        set `name`=#{name},
            `description` =#{description}
        where `id` = #{id}
    </update>

    <insert id="insertRunnerGroup" parameterType="codedriver.framework.dto.runner.RunnerGroupVo">
        insert runnergroup(`id`, `name`, `description`)
        VALUES (#{id},
                #{name},
                #{description})
    </insert>

    <delete id="deleteGroupNetWork">
        delete
        from runnergroup_network
        where `group_id` = #{id}
    </delete>

    <insert id="insertNetwork" parameterType="codedriver.framework.dto.runner.GroupNetworkVo">
        INSERT INTO runnergroup_network(group_id, network_ip, mask)
        VALUES (#{groupId},
                #{networkIp},
                #{mask})
    </insert>

    <select id="checkRunnerGroupIdIsExist" resultType="int">
        select count(`id`)
        from runnergroup
        where `id` = #{id}
    </select>

    <delete id="deleteRunnerGroupById">
        delete
        from runnergroup
        where `id` = #{id}
    </delete>

    <select id="checkRunnerNameIsExist" resultType="int" parameterType="codedriver.framework.dto.runner.RunnerVo">
        select count(1)
        from runner
        where `id` != #{id}
          and `name` = #{name};
    </select>

    <select id="checkRunnerNameIsExistByName" resultType="int">
        select count(1)
        from runner
        where `name` = #{name};
    </select>


    <update id="updateRunner" parameterType="codedriver.framework.dto.runner.RunnerVo">
        UPDATE runner
        SET `name` = #{name},
        `host`=#{host},
        `port`=#{port},
        `url` = #{url},
        `access_key` = #{accessKey},
        `access_secret` = #{accessSecret},
        <if test="host != null and host !='' ">
            `netty_ip` = #{host},
        </if>
        <if test="nettyPort != null and nettyPort !='' ">
            `netty_port` = #{nettyPort},
        </if>
        <if test="accessKey != null and accessKey !='' ">
            `public_key` = #{publicKey},
        </if>
        <if test="privateKey != null and privateKey !='' ">
            `private_key` = #{privateKey},
        </if>
        `auth_type` = #{authType}
        WHERE `id` = #{id}
    </update>

    <insert id="insertRunner" parameterType="codedriver.framework.dto.runner.RunnerVo">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        INSERT INTO runner(
        `name`,`host`,`port` ,`url`,
        <if test="accessKey != null and accessKey !='' and isAuth ==1">
            `access_key`,
        </if>
        <if test="accessSecret != null and accessSecret !='' and isAuth ==1">
            `access_secret`,
        </if>
        <if test="authType != null and authType !='' and isAuth ==1 ">
            `auth_type`,
        </if>
        `netty_ip`, `netty_port`,
        `group_id`,`public_key`,`private_key`
        ) VALUES(
        #{name}, #{host},#{port},#{url},
        <if test="accessKey != null and accessKey !='' ">
            #{accessKey},
        </if>
        <if test="accessSecret != null and accessSecret !='' ">
            #{accessSecret},
        </if>
        <if test="authType != null and authType !='' ">
            #{authType},
        </if>
        #{host},
        #{nettyPort},#{groupId},#{publicKey},#{privateKey}
        )
    </insert>

    <select id="checkRunnerIdIsExist" resultType="int">
        select count(1)
        from runner
        where `id` = #{id}
    </select>

    <delete id="deleteRunnerById">
        delete
        from runner
        where `id` = #{id}
    </delete>

    <select id="getRunnerByIp" parameterType="java.lang.String" resultType="codedriver.framework.dto.runner.RunnerVo"
            useCache="false">
        SELECT `id`            AS id,
               `name`          AS name,
               `url`           AS url,
               `access_key`    AS accessKey,
               `access_secret` AS accessSecret,
               `auth_type`     AS authType,
               `group_id`      AS groupId,
               `host`,
               `port`
        FROM runner p
        WHERE p.host = #{value}
    </select>

    <select id="getRunnerByGroupId" parameterType="java.lang.Long"
            resultType="codedriver.framework.dto.runner.RunnerVo" useCache="true">
        SELECT r.id            AS id,
               r.name          AS name,
               r.url           AS url,
               r.access_key    AS accessKey,
               r.access_secret AS accessSecret,
               r.auth_type     AS authType,
               r.group_id      AS groupId,
               r.netty_ip      as nettyIp,
               r.netty_port    as nettyPort,
               r.host,
               r.port
        FROM runner r
        WHERE r.group_id = #{value}
        ORDER BY id
    </select>

    <select id="getRunnerByIpAndPort" resultType="codedriver.framework.dto.runner.RunnerVo">
        SELECT `id`,
               `name`,
               `url`,
               `host`,
               `port`,
               `access_key`    as accessKey,
               `access_secret` as accessSecret,
               `auth_type`     as authType,
               `public_key`    as publicKey,
               `private_key`   as privateKey,
               `group_id`      as groupId
        FROM `runner`
        WHERE `host` = #{host}
          and `port` = #{port}
    </select>

    <select id="searchRunner" parameterType="codedriver.framework.dto.runner.RunnerGroupVo"
            resultMap="runnerMap">
        SELECT r.id AS id,
        r.name AS name,
        r.url AS url,
        r.netty_port AS nettyPort,
        r.access_key AS accessKey,
        r.access_secret AS accessSecret,
        r.auth_type AS authType,
        r.group_id AS groupId,
        r.host,
        r.port
        FROM runner r
        WHERE r.group_id = #{id}
        ORDER BY id DESC
        <if test="needPage == true">
            LIMIT #{startNum},#{pageSize}
        </if>
    </select>

    <select id="searchRunnerCount" resultType="int">
        select count(`id`)
        from runner
        where `group_id` = #{id}
    </select>

</mapper>

