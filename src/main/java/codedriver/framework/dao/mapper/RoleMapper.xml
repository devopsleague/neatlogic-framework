<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.dao.mapper.RoleMapper">
	
	<select id="checkRoleIsExists" parameterType="java.lang.String" resultType="int">
	SELECT COUNT(`uuid`) FROM `role` WHERE `uuid` = #{uuid}
	</select>
	
	<resultMap id="roleMap" type="codedriver.framework.dto.RoleVo">
		<id column="uuid" property="uuid"/>
		<result column="name" property="name"/>
		<result column="description" property="description"/>
	</resultMap>

	<select id="searchRole" parameterType="codedriver.framework.dto.RoleVo" resultMap = "roleMap">
		SELECT
		a.`uuid`,
		a.`name`,
		a.`description`,
		COUNT(DISTINCT (b.`user_uuid`)) as userCount
		FROM `role` a
		LEFT JOIN `user_role` b ON a.`uuid` = b.`role_uuid`
		LEFT JOIN `role_authority` c ON a.`uuid` = c.`role_uuid`
		WHERE
		1=1
		<if test="keyword != null and keyword != ''">
			AND (name LIKE CONCAT('%',#{keyword}, '%') OR description LIKE CONCAT('%',#{keyword}, '%'))
		</if>
		<if test="authGroup != null and authGroup != ''">
			AND c.`auth_group` = #{authGroup}
		</if>
		<if test="auth != null and auth != ''">
			AND c.`auth` = #{auth}
		</if>
		GROUP BY a.`uuid`
		ORDER BY a.`id` DESC
		<if test="needPage == true">
			LIMIT #{startNum}, #{pageSize}
		</if>
	</select>

	<select id = "searchRoleAuthByRoleUuid" parameterType = "String" resultType = "codedriver.framework.dto.RoleAuthVo">
		SELECT
		`role_uuid` as `roleUuid`,
		`auth_group` as `authGroup`,
		`auth`
		FROM `role_authority`
		WHERE `role_uuid` = #{roleUuid}
	</select>

	<select id="searchRoleCount" parameterType="codedriver.framework.dto.RoleVo" resultType="int">
		SELECT
		COUNT(DISTINCT (a.`uuid`))
		FROM `role` a
		LEFT JOIN `role_authority` b ON a.`uuid` = b.`role_uuid`
		WHERE
		1=1
		<if test="keyword != null and keyword != ''">
			AND (a.`name` LIKE CONCAT('%', #{keyword}, '%') OR a.`description` LIKE CONCAT('%', #{keyword}, '%'))
		</if>
		<if test="authGroup != null and authGroup != ''">
			AND b.`auth_group` = #{authGroup}
		</if>
		<if test="auth != null and auth != ''">
			AND b.`auth` = #{auth}
		</if>
	</select>

	<select id="searchRoleUserCountByRoleUuid" parameterType="java.lang.String" resultType = "int">
		SELECT
		COUNT(1)
		FROM
		`user_role`
		WHERE `role_uuid` = #{value}
	</select>

	<select id="getRoleByUuid" parameterType="java.lang.String" resultType="codedriver.framework.dto.RoleVo">
		SELECT
		`uuid`,
		`name`,
		`description`
		FROM `role`
		WHERE `uuid` = #{value}
	</select>
	
	<select id="getRoleByUuidList" parameterType="java.lang.String" resultType="codedriver.framework.dto.RoleVo">
	SELECT
		`uuid`,
		`name`,
		`description`
	FROM `role`
	WHERE `uuid` in 
	<foreach collection="list" item="item" separator="," open="(" close=")">
	#{item}
	</foreach>
	</select>

	<select id="getRoleCountByAuth"  resultType="codedriver.framework.dto.AuthVo">
		SELECT
		`auth` as `name`,
		COUNT(DISTINCT(`role_uuid`)) as `roleCount`
		FROM `role_authority`
		GROUP BY `auth`, `auth_group`
	</select>

	<insert id="insertRole" parameterType="codedriver.framework.dto.RoleVo">
		INSERT INTO `role` (`uuid`, `name`, `description`)
		VALUES (#{uuid}, #{name}, #{description})
	</insert>

	<insert id="insertRoleUser" parameterType="codedriver.framework.dto.UserVo">
		INSERT INTO `user_role` (`user_uuid`, `role_uuid`)
		VALUES
		(#{userUuid}, #{roleUuid})
	</insert>

	<insert id="insertRoleAuth" parameterType="codedriver.framework.dto.RoleAuthVo">
		INSERT INTO `role_authority` (
			`role_uuid`,
			`auth_group`,
			`auth`
		) VALUES (
			#{roleUuid},
			#{authGroup},
			#{auth}
		)
	</insert>

	<update id="updateRole" parameterType="codedriver.framework.dto.RoleVo">
		UPDATE `role`
		SET 
		`name` = #{name},
		`description` = #{description}
		WHERE `uuid` = #{uuid}
	</update>

	<delete id="deleteRoleByUuid" parameterType="java.lang.String">
		DELETE FROM `role` WHERE `uuid` = #{value}
	</delete>

	<delete id="deleteRoleAuthByRoleUuid" parameterType="string">
		DELETE FROM `role_authority` WHERE `role_uuid` = #{roleUuid}
	</delete>

	<delete id="deleteRoleAuth" parameterType="codedriver.framework.dto.RoleAuthVo">
		DELETE
		FROM `role_authority`
		<where>
			<if test="roleUuid != null and roleUuid != ''">
			AND `role_uuid` = #{roleUuid}
			</if>
			<if test="auth != null and auth != ''">
			AND `auth` = #{auth}
			</if>
		</where>
		
	</delete>

	<delete id="deleteMenuRoleByRoleUuid" parameterType="java.lang.String">
		DELETE FROM `menu_role` WHERE `role_uuid` = #{value}
	</delete>

	<!-- <delete id="deleteUserRoleByRoleUuid" parameterType="java.lang.String">
		DELETE FROM `user_role` WHERE `role_uuid` = #{value}
	</delete> -->

	<delete id="deleteTeamRoleByRoleUuid" parameterType="java.lang.String">
		DELETE FROM `team_role` WHERE `role_uuid` = #{value}
	</delete>

	<delete id="deleteRoleAuthByAuth" parameterType="string">
		DELETE FROM `role_authority` WHERE `auth` = #{auth}
	</delete>
	
	<delete id="deleteRoleUser" parameterType="java.lang.String">
		DELETE FROM `user_role` 
		WHERE `role_uuid` = #{value}
		<if test="userUuid != null and userUuid != ''">
		AND `user_uuid` = #{userUuid}
		</if>
	</delete>
</mapper>