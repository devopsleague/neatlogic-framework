<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.dao.mapper.UserMapper">
	<resultMap id="userRoleMap" type="codedriver.framework.dto.UserVo">
		<id property="userId" column="userId" />
		<result property="userName" column="userName" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="isActive" column="isActive" />
		<collection property="roleList" ofType="java.lang.String">
			<result column="roleName" />
		</collection>
	</resultMap>

	<select id="getUserByUserIdAndPassword" parameterType="codedriver.framework.dto.UserVo" resultMap="userRoleMap">
		SELECT
		a.`user_id` AS userId,
		a.`user_name` AS userName,
		a.`email`,
		a.`password`,
		a.`is_active` AS isActive,
		b.`role_name` AS roleName
		FROM
		`user` a LEFT JOIN user_role b ON a.`user_id` = b.`user_id`
		WHERE a.user_id = #{userId} AND a.password = #{password}
	</select>
	
	<select id="getUserExpirationByUserId" parameterType="java.lang.String" resultType="codedriver.framework.dto.UserExpirationVo">
		SELECT `user_id` as userId,`expired_time` as expiredTime FROM `user_expiration` 
		WHERE `user_id` = #{value} and expired_time > now()
	</select>
	
	
	<insert id="replaceUserExpiration" parameterType="codedriver.framework.dto.UserExpirationVo">
		REPLACE INTO `user_expiration` (`user_id`, `expired_time`) 
		VALUES
		  (#{userId}, #{expiredTime}) ;
	</insert>
	
	<delete id="deleteUserExpirationByUserId" parameterType="java.lang.String">
		DELETE FROM `user_expiration`where `user_id` = #{value}
	</delete>

</mapper>

