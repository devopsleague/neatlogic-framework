<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.dao.mapper.TeamMapper">

	<resultMap id="teamMap" type="codedriver.framework.dto.TeamVo">
		<id property="uuid" column="uuid"/>
		<result property="name" column="name"/>
		<result property="parentUuid" column="parentUuid"/>
        <result property="level" column="level"/>
        <result property="lft" column="lft"/>
        <result property="rht" column="rht"/>
	</resultMap>

	<select id="searchTeam" parameterType="codedriver.framework.dto.TeamVo" resultMap="teamMap">
    SELECT 
	`uuid`,
	`name`,
	`lft`,
	`rht`,
	`parent_uuid` AS `parentUuid`,
	`level`
    FROM `team`
    WHERE `uuid` != '0'
    <if test="keyword != null and keyword != ''">
        and `name` LIKE CONCAT('%', #{keyword}, '%')
    </if>
    <if test="parentUuid != null and parentUuid != ''">
        and `parent_uuid` = #{parentUuid}
    </if>
    <if test="level != null and level != ''">
    	and `level` = #{level}
    </if>
    ORDER BY `lft`
    <if test="needPage == true">
        LIMIT #{startNum}, #{pageSize}
    </if>
       
	</select>

	<select id="searchTeamCount" parameterType="codedriver.framework.dto.TeamVo" resultType="int">
		SELECT
		COUNT(1)
		FROM
		`team`
		WHERE
		1=1
		<if test="keyword != null and keyword != ''">
			and name LIKE CONCAT('%', #{keyword}, '%')
		</if>
		<if test="parentUuid != null and parentUuid != ''">
			and parent_uuid = #{parentUuid}
		</if>
	</select>

	<select id="getTeam" parameterType="codedriver.framework.dto.TeamVo" resultMap="teamMap">
		SELECT
		a.`uuid`,
		a.`name`,
		a.`lft`,
		a.`rht`,
		a.`parent_uuid` as `parentUuid`,
		a.`level`
		FROM
		`team` a
		<where>
			<if test="uuid !=null and uuid != ''">
				AND a.`uuid` = #{uuid}
			</if>
			<if test="name != null and name != ''">
				AND a.`name` = #{name}
			</if>
		</where>
	</select>

	<select id="getTeamByUuid" parameterType="string" resultType="codedriver.framework.dto.TeamVo">
		SELECT
		a.`uuid`,
		a.`name`,
		(SELECT COUNT(1) FROM `team` WHERE `parent_uuid` = a.`uuid`) as `childCount`,
		a.`parent_uuid` as `parentUuid`,
		a.`lft`,
		a.`rht`,
		a.`level`
		FROM
		`team` a
		WHERE `uuid` = #{uuid}
	</select>
	
	<select id="checkTeamIsExists" parameterType="string" resultType="int">
		SELECT COUNT(`uuid`) FROM `team` WHERE `uuid` = #{uuid}
	</select>
	
	<resultMap id="childrenTeamMap" type="codedriver.framework.dto.TeamVo">
		<id property="uuid" column="uuid"/>
		<result property="name" column="name"/>
		<result property="parentUuid" column="parentUuid"/>
		<result property="lft" column="lft"/>
		<result property="rht" column="rht"/>
        <result property="childCount" column="childCount"/>
	</resultMap>
	
	<select id="getTeamByParentUuid" parameterType="java.lang.String" resultMap="childrenTeamMap">
		SELECT
		a.`uuid`,
		a.`name`,
		a.`parent_uuid` AS parentUuid,
		a.`lft`,
		a.`rht`,
		(SELECT COUNT(1) FROM `team` WHERE `parent_uuid` = a.`uuid`) as `childCount`
		FROM `team` a
		WHERE a.`parent_uuid` = #{value}
		ORDER BY `lft` ASC
	</select>

	<select id="searchUserCountByTeamUuid" parameterType="java.lang.String" resultType="int">
		SELECT COUNT(1) FROM `user_team` WHERE `team_uuid` = #{value}
	</select>
	
	<select id="getTeamByUuidList" parameterType="java.lang.String" resultType="codedriver.framework.dto.TeamVo">
		SELECT
		`uuid`,
		`name`,
		`parent_uuid` AS parentUuid,
		`lft`,
		`rht`
		FROM `team`
		WHERE `uuid` in
		<foreach collection="list" item="item" separator="," open="(" close=")">
		#{item}
		</foreach>
	</select>

	<select id="getTeamUuidListByUserUuid" parameterType="java.lang.String" resultType="java.lang.String">
	SELECT 
	  ut.`team_uuid`
	FROM `user_team` ut
	JOIN team t ON t.`uuid`=ut.`team_uuid`
	WHERE ut.`user_uuid`=#{userUuid};
	</select>
	
	<select id="getTeamLockByUuid" parameterType="java.lang.String" resultType="java.lang.String">
	SELECT `uuid` FROM `team` WHERE `uuid` = #{value} FOR UPDATE
	</select>
	
	<select id="getTeamByParentUuidAndStartNum" resultType="codedriver.framework.dto.TeamVo">
	SELECT
		a.`uuid`,
		a.`name`,
		a.`parent_uuid` AS parentUuid,
		a.`lft`,
		a.`rht`
		FROM `team` a
		WHERE a.`parent_uuid` = #{parentUuid}
		ORDER BY a.`lft` ASC
		limit #{startNum}, 1
	</select>
	
	<select id="checkTeamIsExistsByLeftRightCode" resultType="int">
	SELECT COUNT(1) FROM `team` WHERE `uuid` = #{uuid} AND `lft` &gt; #{lft} AND `rht` &lt; #{rht}
	</select>
	
	<select id="getTeamUserUuidListByLftRhtLevelTitle" resultType="java.lang.String">
	SELECT b.`user_uuid` FROM `team` a
	JOIN `user_team` b ON b.`team_uuid` = a.`uuid` AND b.`title`=#{title}
	JOIN `user` c ON c.`uuid`=b.`user_uuid` AND c.`is_active`=1
	WHERE a.`level` = #{level} AND a.`lft` &lt;= #{lft} AND a.`rht` &gt;= #{rht}
	</select>
	
	<select id="getAncestorsAndSelfByLftRht" resultMap="childrenTeamMap">
	SELECT
	a.`uuid`,
	a.`name`,
	a.`parent_uuid` AS parentUuid,
	a.`lft`,
	a.`rht`,
	0 as `childCount`
	FROM `team` a
	WHERE a.`lft` &lt;= #{lft} AND a.`rht` &gt;= #{rht}
	ORDER BY `lft` ASC
	</select>
	
	<select id="getTeamUserCountAndChildCountListByUuidList" parameterType="java.util.List" resultType="codedriver.framework.dto.TeamVo">
	SELECT 
	  a.`uuid`,
	  COUNT(DISTINCT b.`user_uuid`) AS userCount,
	  COUNT(DISTINCT c.`uuid`) AS childCount
	FROM `team` a
	LEFT JOIN `user_team` b ON b.`team_uuid` = a.`uuid`
	LEFT JOIN `team` c ON c.`parent_uuid` = a.`uuid`
	WHERE a.`uuid` IN
	<foreach collection="list" item="teamUuid" open="(" close=")" separator=",">
	#{teamUuid}
	</foreach>
	GROUP BY a.`uuid`
	</select>
	
	<select id="getTeamUserListByTeamUuid" parameterType="java.lang.String" resultType="codedriver.framework.dto.TeamUserVo">
	SELECT 
	  a.`team_uuid` AS teamUuid,
	  a.`user_uuid` AS userUuid,
	  a.`title`,
	  b.`user_id` AS userId,
	  b.`user_name` AS userName 
	FROM `user_team` a
	JOIN `user` b ON b.`uuid`=a.`user_uuid`
	WHERE a.`team_uuid` = #{value}
	ORDER BY a.`id`
	</select>

	<select id="getMaxRhtCode" resultType="java.lang.Integer" useCache="false">
		SELECT max(rht) FROM `team` FOR UPDATE
	</select>

	<select id="getTeamCountOnLock" resultType="int" useCache="false">
		SELECT count(1) FROM `team` FOR UPDATE
	</select>
	
	<insert id="insertTeam" parameterType="codedriver.framework.dto.TeamVo">
		INSERT INTO `team` (
		`uuid`,
		`name`,
		`parent_uuid`,
		`lft`,
		`rht`,
		`level`
		) VALUES (
		#{uuid},
		#{name},
		#{parentUuid},
		#{lft},
		#{rht},
		#{level}
		)
	</insert>
	
	<insert id="insertTeamUser" parameterType="codedriver.framework.dto.TeamUserVo">
		INSERT INTO `user_team` (
		`team_uuid`,
		`user_uuid`,
		`title`
		) VALUES (
		#{teamUuid},
		#{userUuid},
		#{title}
		)
	</insert>

	<update id="updateTeamNameByUuid" parameterType="codedriver.framework.dto.TeamVo">
	UPDATE `team` SET 
	<if test="level != null and level != ''">
	`level` = #{level},
	</if>
	`name` = #{name} 
	WHERE `uuid` = #{uuid}
	</update>

	<update id="updateTeamParentUuidByUuid" parameterType="codedriver.framework.dto.TeamVo">
	UPDATE `team` SET `parent_uuid` = #{parentUuid} WHERE `uuid` = #{uuid}
	</update>

	<update id="updateTeamLeftRightCode">
	UPDATE `team` SET `lft` = #{lft}, `rht` = #{rht} WHERE `uuid` = #{uuid}
	</update>
	
	<update id="batchUpdateTeamLeftCode">
	UPDATE `team` set `lft` = `lft` + #{step} WHERE `lft` &gt;= #{minCode}
	</update>
	
	<update id="batchUpdateTeamRightCode">
	UPDATE `team` set `rht` = `rht` + #{step} WHERE `rht` &gt;= #{minCode}
	</update>
	
	<update id="batchUpdateTeamLeftRightCodeByLeftRightCode">
	UPDATE `team` SET `lft` = `lft` + #{step}, `rht` = `rht` + #{step} WHERE `lft` &gt;= #{lft} AND `rht` &lt;= #{rht}
	</update>

	<update id="updateTeamUserTitle" parameterType="codedriver.framework.dto.TeamUserVo">
	UPDATE `user_team` 
	SET `title` = #{title}
	WHERE `team_uuid` = #{teamUuid}
	AND `user_uuid` = #{userUuid}
	</update>
	
	<delete id="deleteTeamByLeftRightCode">
	DELETE a, b
	FROM `team` a
	LEFT JOIN `user_team` b ON b.`team_uuid` = a.`uuid`
	WHERE a.`lft` &gt;= #{lft} AND a.`rht` &lt;= #{rht}
	</delete>
	
	<delete id="deleteTeamUser" parameterType="codedriver.framework.dto.TeamUserVo">
	DELETE FROM `user_team` 
	WHERE `team_uuid` = #{teamUuid}
	<if test="userUuid != null and userUuid != ''">
	AND `user_uuid` = #{userUuid}
	</if>
	</delete>

	<!--<delete id="deleteTeamByUuid" parameterType="java.lang.String">-->
	<!--DELETE a, b, c-->
	<!--FROM `team` a-->
	<!--LEFT JOIN `team_tag` b ON b.`team_uuid` = a.`uuid`-->
	<!--LEFT JOIN `user_team` c ON c.`team_uuid` = a.`uuid`-->
	<!--WHERE a.`uuid` = #{uuid}-->
	<!--</delete>-->
</mapper>
