<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.message.dao.mapper.MessageMapper">

    <select id="getMessageSubscribeListByUserUuid" parameterType="java.lang.String"
            resultType="codedriver.framework.message.dto.MessageHandlerVo">
        SELECT `handler`,
               `is_active` AS isActive,
               `pop_up`    AS popUp,
               `fcd`
        FROM `message_subscribe`
        WHERE `user_uuid` = #{value}
    </select>

    <select id="getMessageSubscribeByUserUuidAndHandler" parameterType="codedriver.framework.message.dto.MessageHandlerVo"
            resultType="codedriver.framework.message.dto.MessageHandlerVo">
        SELECT `user_uuid` as userUuid,
               `handler`,
               `is_active` as isActive,
               `pop_up` AS popUp,
               `fcd`
        FROM `message_subscribe`
        WHERE `user_uuid` = #{userUuid}
          AND `handler` = #{handler}
    </select>

    <select id="getMessageCount" parameterType="codedriver.framework.message.dto.MessageSearchVo"
            resultType="int">
        SELECT
        COUNT(1)
        FROM `message_user`
        WHERE `user_uuid` = #{userUuid}
        AND `is_delete` = 0
        <if test="messageId != null">
            AND `message_id` > #{messageId}
        </if>
    </select>

    <select id="getMessageList" parameterType="codedriver.framework.message.dto.MessageSearchVo"
            resultType="codedriver.framework.message.dto.MessageVo">
        SELECT
        b.`id`,
        b.`title`,
        b.`content`,
        b.`fcd`,
        b.`handler`,
        a.`is_read` AS isRead
        FROM `message_user` a
        JOIN `message` b ON b.`id` = a.`message_id`
        WHERE a.`user_uuid` = #{userUuid}
        AND a.`is_delete` = 0
        <if test="messageId != null">
            AND a.`message_id` > #{messageId}
        </if>
        LIMIT #{startNum}, #{pageSize}
    </select>

    <select id="getMessageNewCount" parameterType="codedriver.framework.message.dto.MessageSearchVo"
            resultType="int">
        SELECT
        COUNT(1)
        FROM `message_user`
        WHERE `user_uuid` = #{userUuid}
        <if test="messageId != null">
            AND `message_id` > #{messageId}
        </if>
        AND `is_read` = 0
    </select>

    <select id="getMessageHistoryCount" parameterType="codedriver.framework.message.dto.MessageSearchVo"
            resultType="int">
        SELECT
        COUNT(1)
        FROM `message` a
        JOIN `message_user` b ON b.`message_id` = a.`id` AND b.`user_uuid` = #{userUuid}
        <where>
            <if test="handlerList != null and handlerList.size()">
                AND a.`handler` in
                <foreach collection="handlerList" item="handler" open="(" separator="," close=")">
                    #{handler}
                </foreach>
            </if>
            <if test="startTime != null and endTime != null">
                and a.`fcd` &gt;= #{startTime} and a.`fcd` &lt;= #{endTime}
            </if>
        </where>
    </select>

    <select id="getMessageHistoryList" parameterType="codedriver.framework.message.dto.MessageSearchVo"
            resultType="codedriver.framework.message.dto.MessageVo">
        SELECT
        a.`id`,
        a.`title`,
        a.`content`,
        a.`fcd`,
        a.`handler`
        FROM `message` a
        JOIN `message_user` b ON b.`message_id` = a.`id` AND b.`user_uuid` = #{userUuid}
        <where>
            <if test="handlerList != null and handlerList.size()">
                AND a.`handler` in
                <foreach collection="handlerList" item="handler" open="(" separator="," close=")">
                    #{handler}
                </foreach>
            </if>
            <if test="startTime != null and endTime != null">
                and a.`fcd` &gt;= #{startTime} and a.`fcd` &lt;= #{endTime}
            </if>
        </where>
        LIMIT #{startNum}, #{pageSize}
    </select>

    <select id="getMessagePullCount" parameterType="codedriver.framework.message.dto.MessageSearchVo"
            resultType="int">
        SELECT
        COUNT(DISTINCT a.`message_id`)
        FROM `message_recipient` a
        <if test="handlerList != null and handlerList.size() > 0">
            JOIN `message` b ON b.`id` = a.`message_id`
        </if>
        WHERE a.`message_id` &gt;= #{messageId}
        <if test="handlerList != null and handlerList.size() > 0">
            AND b.`handler` IN
            <foreach collection="handlerList" item="handler" open="(" separator="," close=")">
                #{handler}
            </foreach>
        </if>
        AND ((a.`type` = 'user' AND a.`uuid` = #{userUuid})
        OR (a.`type` = 'team' AND a.`uuid` IN
        <foreach collection="teamUuidList" item="teamUuid" open="(" separator="," close=")">
            #{teamUuid}
        </foreach>
        )
        OR (a.`type` = 'role' AND a.`uuid` IN
        <foreach collection="roleUuidList" item="roleUuid" open="(" separator="," close=")">
            #{roleUuid}
        </foreach>
        )
        )
    </select>

    <select id="getMessagePullList" parameterType="codedriver.framework.message.dto.MessageSearchVo"
            resultType="java.lang.Long">
        SELECT
        DISTINCT a.`message_id`
        FROM `message_recipient` a
        <if test="handlerList != null and handlerList.size() > 0">
            JOIN `message` b ON b.`id` = a.`message_id`
        </if>
        WHERE a.`message_id` &gt;= #{messageId}
        <if test="handlerList != null and handlerList.size() > 0">
            AND b.`handler` IN
            <foreach collection="handlerList" item="handler" open="(" separator="," close=")">
                #{handler}
            </foreach>
        </if>
        AND ((a.`type` = 'user' AND a.`uuid` = #{userUuid})
        OR (a.`type` = 'team' AND a.`uuid` IN
        <foreach collection="teamUuidList" item="teamUuid" open="(" separator="," close=")">
            #{teamUuid}
        </foreach>
        )
        OR (a.`type` = 'role' AND a.`uuid` IN
        <foreach collection="roleUuidList" item="roleUuid" open="(" separator="," close=")">
            #{roleUuid}
        </foreach>
        )
        )
        ORDER BY a.`message_id`
        LIMIT #{startNum}, #{pageSize}
    </select>

    <select id="getMessageListByIdList" parameterType="java.lang.Long"
            resultType="codedriver.framework.message.dto.MessageVo">
        SELECT
        `id`,
        `title`,
        `content`,
        `fcd`,
        `handler`
        FROM `message`
        WHERE `id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getMessageUserMaxMessageIdByUserUuid" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT
            MAX(`message_id`)
        FROM `message_user`
        WHERE `user_uuid` = #{value}
    </select>

    <select id="getMessageFcdById" parameterType="java.lang.Long" resultType="java.util.Date">
        SELECT `fcd` FROM `message` WHERE `id` = #{value}
    </select>

    <select id="getMessageMinIdByGreaterThanFcd" parameterType="java.util.Date" resultType="java.lang.Long">
        SELECT `id` FROM `message` WHERE `fcd` &gt;= #{value} LIMIT 1
    </select>
    <insert id="insertMessage" parameterType="codedriver.framework.message.dto.MessageVo">
        INSERT INTO `message` (
        `id`,
        `title`,
        `content`,
        `handler`,
        `fcd`
        )
        VALUES
        <foreach collection="list" item="messageVo" separator=",">
            (
            #{messageVo.id},
            #{messageVo.title},
            #{messageVo.content},
            #{messageVo.handler},
            NOW(3)
            )
        </foreach>

    </insert>

    <insert id="insertMessageRecipient" parameterType="codedriver.framework.message.dto.MessageRecipientVo">
        INSERT INTO `message_recipient` (`message_id`, `type`, `uuid`)
        VALUES
        <foreach collection="list" item="messageRecipientVo" separator=",">
            (#{messageRecipientVo.messageId}, #{messageRecipientVo.type}, #{messageRecipientVo.uuid})
        </foreach>
    </insert>

    <insert id="insertMessageUser" parameterType="codedriver.framework.message.dto.MessageSearchVo">
        INSERT INTO `message_user` (
        `message_id`,
        `user_uuid`
        )
        VALUES
        <foreach collection="list" item="messageUserVo" separator=",">
            (
            #{messageUserVo.messageId},
            #{messageUserVo.userUuid}
            )
        </foreach>
    </insert>

    <insert id="insertMessageSubscribe" parameterType="codedriver.framework.message.dto.MessageHandlerVo">
        INSERT INTO `message_subscribe` (`user_uuid`,
                                      `handler`,
                                      `is_active`,
                                      `pop_up`,
                                      `fcd`)
        VALUES (#{userUuid},
                #{handler},
                #{isActive},
                #{popUp},
                NOW(3))
    </insert>

    <update id="updateMessageUserIsRead" parameterType="codedriver.framework.message.dto.MessageSearchVo">
        UPDATE `message_user`
        SET `is_read` = 1
        WHERE `user_uuid` = #{userUuid}
          AND `message_id` = #{messageId}
    </update>
    <update id="updateMessageUserIsDelete" parameterType="codedriver.framework.message.dto.MessageSearchVo">
        UPDATE `message_user`
        SET `is_read` = 1,
            `is_delete` = 1
        WHERE `user_uuid` = #{userUuid}
          <if test="messageId != null">
              AND `message_id` = #{messageId}
          </if>
    </update>

    <update id="updateMessageSubscribePopUp" parameterType="codedriver.framework.message.dto.MessageHandlerVo">
        UPDATE `message_subscribe`
        SET `pop_up` = #{popUp}
        WHERE `user_uuid` = #{userUuid}
          AND `handler` = #{handler}
    </update>

    <update id="updateMessageSubscribeActive" parameterType="codedriver.framework.message.dto.MessageHandlerVo">
        UPDATE `message_subscribe`
        SET `is_active` = !`is_active`,
            `fcd` = NOW(3)
        WHERE `user_uuid` = #{userUuid}
          AND `handler` = #{handler}
    </update>
</mapper>