<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.reminder.dao.mapper.GlobalReminderMessageMapper">
    <resultMap id="messageMap" type="codedriver.framework.reminder.dto.GlobalReminderMessageVo">
        <id column="id" property="id"/>
        <result column="handler" property="handler"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="createTime" property="createTime"/>
        <result column="fromUser" property="fromUser"/>
        <result column="fromUserName" property="fromUserName"/>
        <result column="isNew" property="isNew"/>
        <result column="isKeep" property="isKeep"/>
        <result column="messageParam" property="param"/>
        <association property="reminderSubscribeVo" javaType="codedriver.framework.reminder.dto.GlobalReminderSubscribeVo">
            <id column="subscribeId" property="id"/>
            <result column="userUuid" property="userUuid"/>
            <result column="userName" property="userName"/>
            <result  column="param" property="param"/>
        </association>
    </resultMap>

    <select id="getShowReminderMessageListByIdListAndUserUuid" parameterType="codedriver.framework.reminder.dto.ReminderMessageSearchVo" resultMap="messageMap">
        SELECT
        b.`id` as `id`,
        a.`is_new` as `isNew`,
        a.`is_keep` as `isKeep`,
        a.`user_uuid` as `userUuid`,
        c.`user_name` as `userName`,
        b.`title`,
        g.`content`,
        b.`param` as `messageParam`,
        b.`handler` as `handler`,
        DATE_FORMAT(b.`create_time`, '%Y-%m-%d %H:%i:%s') AS createTime,
        b.`from_user` as `fromUserName`,
        e.`id` as `subscribeId`,
        e.`param` as `param`,
        (SELECT `user_name` FROM `user` WHERE `uuid` = #{userUuid}) as `userName`,
        (${userUuid}) as `userUuid`
        FROM `reminder_message_user` a
        LEFT JOIN `reminder_message` b ON a.`reminder_message_id` = b.`id`
        LEFT JOIN `user` c ON a.`user_uuid` = c.`uuid`
        LEFT JOIN `reminder_message_content` g ON b.`id` = g.`reminder_message_id`
        LEFT JOIN  (SELECT * FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}) e ON b.`handler` = e.`handler`
        WHERE a.`is_active` = 1
        AND e.`id` IS NOT null
        AND a.`user_uuid` = #{userUuid}
        AND b.`handler` IN (
        SELECT `handler` FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}
        )
        AND UNIX_TIMESTAMP(b.`create_time`) &lt; UNIX_TIMESTAMP(#{endTime})
        AND UNIX_TIMESTAMP(b.`create_time`) &gt;= UNIX_TIMESTAMP(#{startTime})
        <if test="messageId !=null and messageId != 0">
            AND a.`reminder_message_id` &lt; #{messageId}
        </if>
        ORDER BY a.`reminder_message_id` desc
        LIMIT 0, #{messageCount}

    </select>

    <select id="getReminderHistoryMessageCount" parameterType="codedriver.framework.reminder.dto.param.ReminderHistoryParamVo" resultType="Integer">
        SELECT
        COUNT(DISTINCT (b.`id`))
        FROM `reminder_message_user` a
        LEFT JOIN `reminder_message` b ON a.`reminder_message_id` = b.`id`
        LEFT JOIN `user` c ON a.`user_uuid` = c.`uuid`
        LEFT JOIN `reminder_message_content` g ON b.`id` = g.`reminder_message_id`
        LEFT JOIN  (SELECT * FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}) e ON b.`handler` = e.`handler`
        WHERE
        e.`id` IS NOT null
        AND a.`user_uuid` = #{userUuid}
        AND b.`handler` IN (
        SELECT `handler` FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}
        )
        AND UNIX_TIMESTAMP(b.`create_time`) &lt; UNIX_TIMESTAMP(#{endTime})
        AND UNIX_TIMESTAMP(b.`create_time`) &gt;= UNIX_TIMESTAMP(#{startTime})
        <if test="pluginIdList != null and pluginIdList.size > 0">
            AND b.`handler` IN
            <foreach collection="pluginIdList" open="(" separator="," close=")" item="handler">
                #{handler}
            </foreach>
        </if>
    </select>

    <select id="getReminderHistoryMessageList" parameterType="codedriver.framework.reminder.dto.param.ReminderHistoryParamVo" resultMap="messageMap">
        SELECT
        b.`id` as `id`,
        a.`is_new` as `isNew`,
        a.`is_keep` as `isKeep`,
        a.`user_uuid` as `userUuid`,
        c.`user_name` as `userName`,
        b.`title`,
        g.`content`,
        b.`param` as `messageParam`,
        b.`handler` as `handler`,
        DATE_FORMAT(b.`create_time`, '%Y-%m-%d %H:%i:%s') AS createTime,
        b.`from_user` as `fromUserName`,
        e.`id` as `subscribeId`,
        e.`param` as `param`,
        (SELECT `user_name` FROM `user` WHERE `uuid` = #{userUuid}) as `userName`,
        (#{userUuid}) as `userUuid`
        FROM `reminder_message_user` a
        LEFT JOIN `reminder_message` b ON a.`reminder_message_id` = b.`id`
        LEFT JOIN `user` c ON a.`user_uuid` = c.`uuid`
        LEFT JOIN `reminder_message_content` g ON b.`id` = g.`reminder_message_id`
        LEFT JOIN  (SELECT * FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}) e ON b.`handler` = e.`handler`
        WHERE
        e.`id` IS NOT null
        AND a.`user_uuid` = #{userUuid}
        AND b.`handler` IN (
        SELECT `handler` FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}
        )
        AND UNIX_TIMESTAMP(b.`create_time`) &lt; UNIX_TIMESTAMP(#{endTime})
        AND UNIX_TIMESTAMP(b.`create_time`) &gt;= UNIX_TIMESTAMP(#{startTime})
        <if test="pluginIdList != null and pluginIdList.size > 0">
            AND b.`handler` IN
            <foreach collection="pluginIdList" open="(" separator="," close=")" item="handler">
                #{handler}
            </foreach>
        </if>
        ORDER BY a.`reminder_message_id` desc
        <if test="needPage == true">
            LIMIT #{startNum}, #{pageSize}
        </if>
    </select>

    <select id="getReminderMessageCountByDay" parameterType="codedriver.framework.reminder.dto.ReminderMessageSearchVo" resultType="java.lang.Integer">
        SELECT COUNT(a.reminder_message_id)
        FROM `reminder_message_user` a
        LEFT JOIN `reminder_message` b ON a.reminder_message_id = b.id
        LEFT JOIN (SELECT * FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}) d ON b.`handler` = d.`handler`
        WHERE a.`user_uuid` = #{userUuid}
        AND d.`id` IS NOT null
        AND a.`is_active` = 1
        AND UNIX_TIMESTAMP(b.`create_time`) &lt; UNIX_TIMESTAMP(#{endTime})
        AND UNIX_TIMESTAMP(b.`create_time`) &gt;= UNIX_TIMESTAMP(#{startTime})
    </select>
    
    <select id="getScheduleMessageList" parameterType="java.lang.String" resultMap="messageMap">
          SELECT
        b.`id` as `id`,
        b.`handler` as `handler`,
        a.`is_new` as `isNew`,
        a.`is_keep` as `isKeep`,
        a.`user_uuid` as `userUuid`,
        c.`user_name` as `userName`,
        b.`title`,
        g.`content`,
        b.`param` as `messageParam`,
        DATE_FORMAT(b.`create_time`, '%Y-%m-%d %H:%i:%s') AS createTime,
        b.`from_user` as `fromUserName`,
        e.`id` as `subscribeId`,
        e.`param` as `param`,
        (SELECT `user_name` FROM `user` WHERE `uuid` = #{userUuid}) as `userName`,
        (${userUuid}) as `userUuid`
        FROM `reminder_message_user` a
        LEFT JOIN `reminder_message` b ON a.`reminder_message_id` = b.`id`
        LEFT JOIN `user` c ON a.`user_uuid` = c.`uuid`
        LEFT JOIN `reminder_message_content` g ON b.`id` = g.`reminder_message_id`
        LEFT JOIN (SELECT * FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}) e ON b.`handler` = e.`handler`
        WHERE a.`is_active` = 1
        AND e.`id` IS NOT null
        AND a.`user_uuid` = #{userUuid}
        AND b.`handler` IN (
          SELECT `handler` FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}
        )
        AND a.`is_new` = 1
    </select>

    <select id="getReminderMessageCount" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT COUNT(a.`reminder_message_id`)
        FROM `reminder_message_user` a
        LEFT JOIN `reminder_message` b ON a.`reminder_message_id` = b.`id`
        LEFT JOIN (SELECT * FROM `reminder_subscribe` WHERE `user_uuid` = #{userUuid}) d ON b.`handler` = d.`handler`
        WHERE a.`user_uuid`= #{userUuid}
         AND a.`is_active` = 1
         AND d.`id` IS NOT null
         AND DATE_SUB(CURDATE(), INTERVAL 6 DAY) &lt;= b.`create_time`
    </select>
    
    <update id="updateMessageKeepStatus">
        UPDATE `reminder_message_user` SET `is_keep` = 0 WHERE `reminder_message_id` = #{messageId} AND `user_uuid` = #{userUuid}
    </update>

    <update id="updateUserMessageNewStatus">
        UPDATE `reminder_message_user` SET is_new = 0 WHERE `reminder_message_id` = #{userMessageId} AND `user_uuid` = #{userUuid}
    </update>

    <update id="updateMessageActiveById">
        UPDATE `reminder_message_user` SET `is_active` = 0 WHERE `reminder_message_id` = #{messageId} AND `user_uuid` = #{userUuid}
    </update>

    <update id="updateAllMessageActive">
        UPDATE `reminder_message_user` SET `is_active` = 0 WHERE `user_uuid` = #{userUuid} AND `is_active` = 1
    </update>

    <update id="updateDayMessageActive" parameterType="codedriver.framework.reminder.dto.ReminderMessageSearchVo">
        UPDATE
          `reminder_message_user`
        SET `is_active` = 0
        WHERE `user_uuid` = #{userUuid}
        AND `reminder_message_id` IN (
          SELECT
            `id`
          FROM reminder_message
          WHERE UNIX_TIMESTAMP(`create_time`) &lt; UNIX_TIMESTAMP(#{endTime})
          AND UNIX_TIMESTAMP(`create_time`) &gt;= UNIX_TIMESTAMP(#{startTime}))
    </update>

    <update id="updateMessageActiveByReminderId">
      UPDATE `reminder_message_user`
        SET `is_active` = 0
        WHERE `reminder_message_id` IN (
            SELECT c.`reminder_message_id` FROM  (
                  SELECT `reminder_message_id`
                  FROM `reminder_message_user` a
                  LEFT JOIN `reminder_message` b ON a.`reminder_message_id` = b.`id`
                  WHERE a.`is_active` = 1
                  AND a.`user_uuid` = #{userUuid}
                  AND b.`handler` = #{handler}
            ) c
        )
    </update>

    <insert id="insertReminderMessageUser">
         INSERT INTO `reminder_message_user` (
        `reminder_message_id`,
        `user_uuid`,
        `is_active`,
        `is_new`,
        `is_keep`
        ) VALUES (
        #{messageId},
        #{userUuid},
        1,
        1,
        1
        )
    </insert>

    <insert id="insertReminderMessage" parameterType="codedriver.framework.reminder.dto.GlobalReminderMessageVo">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        INSERT INTO `reminder_message` (
        `title`,
        `create_time`,
        `from_user`,
        `handler`,
        `param`
        ) VALUES (
        #{title},
        NOW(),
        #{fromUser},
        #{handler},
        #{param}
        )
    </insert>
    
    <insert id="insertReminderMessageContent" parameterType="codedriver.framework.reminder.dto.GlobalReminderMessageVo">
        INSERT INTO `reminder_message_content`(
        `reminder_message_id`,
        `content`
        ) VALUES (
        #{id},
        #{content}
        )
    </insert>
</mapper>