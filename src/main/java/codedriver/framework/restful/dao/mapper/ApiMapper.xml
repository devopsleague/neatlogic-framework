<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.restful.dao.mapper.ApiMapper">
	<cache type="codedriver.framework.dao.cache.CodeDriverCache" flushInterval="30000" readOnly="true"></cache>
	
	<select id="getApiByhandler" parameterType="java.lang.String" resultType="codedriver.framework.restful.dto.ApiVo">
		SELECT
		`name`,
		`module_id` AS moduleId,
		`handler`,
		`username`,
		`password`,
		`config`,
		`is_active` AS isActive,
		`token`,
		`expire`,
		`description`,
		`authtype`,
		`type`
		FROM `api`
		WHERE
		handler = #{value}
	</select>

	<select id="getApiByToken" parameterType="java.lang.String" resultType="codedriver.framework.restful.dto.ApiVo" useCache="true">
		SELECT
		`name`,
		`module_id` AS moduleId,
		`handler`,
		`username`,
		`password`,
		`config`,
		`is_active` AS isActive,
		`token`,
		`expire`,
		`description`,
		`authtype`,
		`type`,
		`timeout`,
		`need_audit` AS needAudit
		FROM `api`
		WHERE
		token = #{value}
	</select>
	
	<select id="getApiTokenList" parameterType="codedriver.framework.restful.dto.ApiVo" resultType="java.lang.String">
		SELECT
		`token`
		FROM `api`
		WHERE 1=1
		<if test="moduleId != null">
		AND `module_id` = #{moduleId}
		</if>
		<if test="handler != null">
		AND `handler` = #{handler}
		</if>
		<if test="isActive != null">
		AND `is_active` = #{isActive}
		</if>
		<if test="keyword != null and keyword != ''">
		AND `name` LIKE CONCAT('%', #{keyword}, '%')
		</if>
	</select>
	
	<select id="getApiListByTokenList" parameterType="java.lang.String" resultType="codedriver.framework.restful.dto.ApiVo">
		SELECT
		`name`,
		`module_id` AS moduleId,
		`handler`,
		`username`,
		`password`,
		`config`,
		`is_active` AS isActive,
		`token`,
		`expire`,
		`description`,
		`authtype`,
		`type`,
		`timeout`,
		`need_audit` AS needAudit
		FROM `api`
		WHERE `token` IN 
		<foreach collection="list" item="token" separator="," open="(" close=")">
		#{token}
		</foreach>
	</select>

	<select id="getApiAuditCount" parameterType="codedriver.framework.restful.dto.ApiAuditVo" resultType="int">
	SELECT 
	  count(`token`) 
	FROM
	  `api_audit` 
	WHERE `token` = #{token}
	</select>

	<select id="getApiAuditList" parameterType="codedriver.framework.restful.dto.ApiAuditVo" resultType="codedriver.framework.restful.dto.ApiAuditVo">
	SELECT 
	  `uuid`,
	  `token`,
	  `user_id` AS userId,
	  `authtype`,
	  `server_id` AS serverId,
	  `ip`,
	  `start_time` AS startTime,
	  `end_time` AS endTime,
	  `time_cost` AS timeCost,
	  `status` 
	FROM
	  `api_audit` 
	WHERE `token` = #{token}
	LIMIT #{startNum}, #{pageSize}
	</select>
	
	<select id="getApiVisitTimesListByTokenList" parameterType="java.lang.String" resultType="codedriver.framework.restful.dto.ApiVo">
		SELECT	
		`token`,
		COUNT(`token`) AS visitTimes
		FROM `api_audit`
		WHERE `token` IN 
		<foreach collection="list" item="token" separator="," open="(" close=")">
		#{token}
		</foreach>
		GROUP BY `token`
	</select>
	
	<update id="updateApihandlerById" parameterType="codedriver.framework.restful.dto.ApiVo">
		UPDATE `api`
		SET
		handler = #{handler}
		WHERE
		id = #{id}
	</update>

	<insert id="replaceApi" parameterType="codedriver.framework.restful.dto.ApiVo">
		REPLACE INTO `api`
		(
		name,
		`module_id`,
		`is_active`,
		`handler`,
		`config`,
		`token`,
		`description`,
		`expire`,
		`username`,
		`password`,
		`authtype`,
		`type`,
		`qps`,
		`timeout`,
		`need_audit`,
		`create_time`
		) VALUES (
		#{name},
		#{moduleId},
		#{isActive},
		#{handler},
		#{config},
		#{token},
		#{description},
		#{expire},
		#{username},
		#{password},
		#{authtype},
		#{type},
		#{qps},
		#{timeout},
		#{needAudit},
		now()
		)
	</insert>

	<insert id="insertApiAudit">
		INSERT INTO `api_audit`(`uuid`, `token`, `user_id`, `authtype`, `server_id`, `ip`, `start_time`, `end_time`, `time_cost`, `status`) 
		VALUES(#{uuid}, #{token}, #{userId}, #{authtype}, #{serverId}, #{ip}, #{startTime}, #{endTime}, #{timeCost}, #{status})
	</insert>

	<delete id="deleteApiByToken" parameterType="java.lang.String">
	DELETE FROM `api` WHERE `token` = #{token}
	</delete>
</mapper>