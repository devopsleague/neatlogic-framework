<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.matrix.dao.mapper.MatrixMapper">
	<resultMap id="matrixMap" type="codedriver.framework.matrix.dto.MatrixVo">
		<id property="uuid" column="uuid"/>
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="label" column="label"/>
		<result property="type" column="type"/>
		<result property="fcu" column="fcu"/>
		<result property="fcd" column="fcd"/>
		<result property="lcd" column="lcd"/>
		<association property="lcuVo" javaType="codedriver.framework.dto.UserVo">
			<result property="uuid" column="lcuUuid" />
			<result property="userName" column="lcuName" />
			<result property="pinyin" column="lcuPinyin" />
			<result property="vipLevel" column="lcuVipLevel" />
			<result property="userInfo" column="lcuInfo" />
		</association>
	</resultMap>

	<insert id="insertMatrix" parameterType="codedriver.framework.matrix.dto.MatrixVo" >
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO `matrix` (
		`uuid`,
		`name`,
		`label`,
		`type`,
		`fcu`,
		`fcd`,
		`lcu`,
		`lcd`
		) VALUES (
		#{uuid},
		#{name},
		#{label},
		#{type},
		#{fcu},
		NOW(3),
		#{lcu},
		NOW(3)
		)
	</insert>

	<select id="searchMatrixCount" parameterType="codedriver.framework.matrix.dto.MatrixVo" resultType="int">
		SELECT
			COUNT(`uuid`)
		FROM `matrix`
		<where>
			<if test="type != null and type != ''">
				AND `type` = #{type}
			</if>
			<if test="keyword != null and keyword != ''">
				AND `name` LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
	</select>

	<select id="getMatrixByUuid" parameterType="String" resultType="codedriver.framework.matrix.dto.MatrixVo">
		SELECT
		`id`,
		`uuid`,
		`name`,
		`label`,
		`type`,
		`fcu`,
		`fcd`,
		`lcu`,
		`lcd`
		FROM `matrix`
		WHERE `uuid` = #{uuid}
	</select>

	<select id="getMatrixListByUuidList" parameterType="String" resultType="codedriver.framework.matrix.dto.MatrixVo">
		SELECT
		`id`,
		`uuid`,
		`name`,
		`label`,
		`type`,
		`fcu`,
		`fcd`,
		`lcu`,
		`lcd`
		FROM `matrix`
		WHERE `uuid` IN
		<foreach collection="list" item="uuid" open="(" separator="," close=")">
			#{uuid}
		</foreach>
	</select>

	<select id="searchMatrix" parameterType="codedriver.framework.matrix.dto.MatrixVo" resultMap="matrixMap">
			SELECT 
			a.`id`,
			a.`uuid`,
			a.`name`,
			a.`label`,
			a.`type`,
			a.`fcu`,
			a.`fcd`,
			a.`lcu` as lcuUuid,
			(SELECT u.`user_name` from `user` u WHERE u.`uuid` = a.`lcu`) AS lcuName,
			(SELECT u.`user_info` from `user` u WHERE u.`uuid` = a.`lcu`) AS lcuInfo,
			(SELECT u.`pinyin` from `user` u WHERE u.`uuid` = a.`lcu`) AS lcuPinyin,
			(SELECT u.`vip_level` from `user` u WHERE u.`uuid` = a.`lcu`) AS lcuVipLevel,
			a.`lcd`
			FROM `matrix` a
			<where>
				<if test="type != null and type != ''">
					AND a.`type` = #{type}
				</if>
				<if test="keyword != null and keyword != ''">
					AND a.`name` LIKE CONCAT('%', #{keyword}, '%')
				</if>
			</where>
			ORDER BY a.`id` desc
			<if test="needPage == true">
				LIMIT #{startNum}, #{pageSize}
			</if>
	</select>
	
	<select id="checkMatrixIsExists" parameterType="java.lang.String" resultType="int">
	SELECT COUNT(`uuid`) FROM `matrix` WHERE `uuid` = #{uuid}
	</select>
	
	<select id="checkMatrixNameIsRepeat" parameterType="codedriver.framework.matrix.dto.MatrixVo" resultType="int">
	SELECT COUNT(1) FROM `matrix` WHERE `name` = #{name} AND `uuid` != #{uuid}
	</select>

	<select id="checkMatrixLabelIsRepeat" parameterType="codedriver.framework.matrix.dto.MatrixVo" resultType="int">
	SELECT COUNT(1) FROM `matrix` WHERE `label` = #{label} AND `uuid` != #{uuid}
	</select>
	
	<update id="updateMatrixNameAndLcu" parameterType="codedriver.framework.matrix.dto.MatrixVo">
		UPDATE `matrix` SET
		 `name` = #{name},
		 `lcu` = #{lcu},
		 `lcd` = NOW(3)
		 WHERE `uuid` = #{uuid}
	</update>

	<delete id="deleteMatrixByUuid" parameterType="string">
		DELETE FROM `matrix` WHERE `uuid` = #{uuid}
	</delete>
</mapper>
