<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.matrix.dao.mapper.MatrixDataMapper">
    <select id="getDynamicTableDataCount" parameterType="codedriver.framework.matrix.dto.MatrixDataVo"
            resultType="int">
        SELECT
        COUNT(`uuid`)
        FROM codedriver_${tenantId}_data.`matrix_${dataVo.matrixUuid}`
        <where>
            <if test="dataVo.keyword != null and dataVo.keyword != ''">
                <foreach collection="dataVo.columnList" separator="OR" item="column">
                    `${column}` LIKE CONCAT('%', #{dataVo.keyword}, '%')
                </foreach>
            </if>
        </where>
    </select>

    <select id="getDynamicTableDataCountByUuid" resultType="int">
        SELECT COUNT(`uuid`)
        FROM codedriver_${tenantId}_data.`matrix_${matrixUuid}`
        WHERE `uuid` = #{uuid}
    </select>

    <select id="searchDynamicTableData" parameterType="codedriver.framework.matrix.dto.MatrixDataVo"
            resultType="java.util.LinkedHashMap">
        SELECT
        `uuid`,
        <foreach collection="dataVo.columnList" separator="," item="column">
            `${column}`
        </foreach>
        FROM codedriver_${tenantId}_data.`matrix_${dataVo.matrixUuid}`
        <where>
            <if test="dataVo.keyword != null and dataVo.keyword != ''">
                <foreach collection="dataVo.columnList" separator="OR" item="column">
                    `${column}` LIKE CONCAT('%', #{dataVo.keyword}, '%')
                </foreach>
            </if>
        </where>
        ORDER BY `id` DESC
        <if test="dataVo.needPage == true">
            LIMIT #{dataVo.startNum}, #{dataVo.pageSize}
        </if>
    </select>

    <sql id="searchDynamicTableDataSql">
        <if test="dataVo.sourceColumnList != null and dataVo.sourceColumnList.size() > 0">
            <foreach collection="dataVo.sourceColumnList" item="sourceColumn">
                <choose>
                    <when test="sourceColumn.expression == 'equal'">
                        AND `${sourceColumn.column}` = #{sourceColumn.value}
                    </when>
                    <when test="sourceColumn.expression == 'unequal'">
                        AND `${sourceColumn.column}` != #{sourceColumn.value}
                    </when>
                    <when test="sourceColumn.expression == 'like'">
                        AND `${sourceColumn.column}` LIKE CONCAT('%', #{sourceColumn.value}, '%')
                    </when>
                    <when test="sourceColumn.expression == 'greater-than'">
                        AND `${sourceColumn.column}` &gt; #{sourceColumn.value}
                    </when>
                    <when test="sourceColumn.expression == 'less-than'">
                        AND `${sourceColumn.column}` &lt; #{sourceColumn.value}
                    </when>
                    <when test="sourceColumn.expression == 'include' and sourceColumn.value != null and sourceColumn.value.size() > 0">
                        AND `${sourceColumn.column}` IN
                        <foreach collection="sourceColumn.value" item="item" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        AND `${sourceColumn.column}` = #{sourceColumn.value}
                    </otherwise>
                </choose>
            </foreach>
        </if>
    </sql>

    <select id="getDynamicTableDataByColumnList" parameterType="codedriver.framework.matrix.dto.MatrixDataVo"
            resultType="java.util.LinkedHashMap">
        SELECT
        `uuid`,
        <foreach collection="dataVo.columnList" item="column" separator=",">
            `${column}`
        </foreach>
        FROM codedriver_${tenantId}_data.`matrix_${dataVo.matrixUuid}`
        <where>
            <include refid="searchDynamicTableDataSql"/>
        </where>
        ORDER BY `id` DESC
        <if test="dataVo.needPage == true">
            LIMIT #{dataVo.startNum}, #{dataVo.pageSize}
        </if>
    </select>

    <select id="getDynamicTableDataByColumnList2" parameterType="codedriver.framework.matrix.dto.MatrixDataVo"
            resultType="java.util.LinkedHashMap">
        select
        DISTINCT a.*
        from (
        SELECT
        <foreach collection="dataVo.columnList" item="column" separator=",">
            a.`${column}`
        </foreach>
        FROM codedriver_${tenantId}_data.`matrix_${dataVo.matrixUuid}` a
        <choose>
            <when test="dataVo.attrType == 'user'">
                JOIN `user` b ON b.`uuid` = a.`${dataVo.attributeUuid}`
            </when>
            <when test="dataVo.attrType == 'team'">
                JOIN `team` c ON c.`uuid` = a.`${dataVo.attributeUuid}`
            </when>
            <when test="dataVo.attrType == 'role'">
                JOIN `role` d ON d.`name` = a.`${dataVo.attributeUuid}`
            </when>
        </choose>
        <where>
            <foreach collection="dataVo.columnList" item="column" separator="AND">
                a.`${column}` IS NOT NULL
            </foreach>
            <choose>
                <when test="dataVo.attrType == 'input' or dataVo.attrType == 'select' or dataVo.attrType == 'date'">
                    <if test="dataVo.keyword != null and dataVo.keyword != ''">
                        and `${dataVo.attributeUuid}` LIKE CONCAT('%', #{dataVo.keyword}, '%')
                    </if>
                </when>
                <when test="dataVo.attrType == 'user'">
                    and b.`user_id` LIKE CONCAT('%', #{dataVo.keyword}, '%') OR b.`user_name` LIKE CONCAT('%', #{dataVo.keyword}, '%')
                </when>
                <when test="dataVo.attrType == 'team'">
                    and c.`uuid` LIKE CONCAT('%', #{dataVo.keyword}, '%') OR c.`name` LIKE CONCAT('%', #{dataVo.keyword}, '%')
                </when>
                <when test="dataVo.attrType == 'role'">
                    and d.`name` LIKE CONCAT('%', #{dataVo.keyword}, '%') OR d.`description` LIKE CONCAT('%', #{dataVo.keyword}, '%')
                </when>
            </choose>
            <if test="dataVo.sourceColumnList != null and dataVo.sourceColumnList.size() > 0">
                <foreach collection="dataVo.sourceColumnList" item="sourceColumn">
                    <choose>
                        <when test="sourceColumn.expression == 'equal'">
                            AND a.`${sourceColumn.column}` = #{sourceColumn.value}
                        </when>
                        <when test="sourceColumn.expression == 'unequal'">
                            AND a.`${sourceColumn.column}` != #{sourceColumn.value}
                        </when>
                        <when test="sourceColumn.expression == 'like'">
                            AND a.`${sourceColumn.column}` LIKE CONCAT('%', #{sourceColumn.value}, '%')
                        </when>
                        <when test="sourceColumn.expression == 'greater-than'">
                            AND a.`${sourceColumn.column}` &gt; #{sourceColumn.value}
                        </when>
                        <when test="sourceColumn.expression == 'less-than'">
                            AND a.`${sourceColumn.column}` &lt; #{sourceColumn.value}
                        </when>
                        <otherwise>
                            AND a.`${sourceColumn.column}` = #{sourceColumn.value}
                        </otherwise>
                    </choose>
                </foreach>
            </if>
            <if test="dataVo.filterList != null and dataVo.filterList.size() > 0">
                <foreach collection="dataVo.filterList" item="filter" separator=" ">
                    <if test="filter.valueList != null and filter.valueList.size() > 0">
                        and a.`${filter.uuid}` in
                        <foreach collection="filter.valueList" item="value" open="(" separator="," close=")">
                            '${value}'
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
        ORDER BY a.`id` DESC
        ) a
        <if test="dataVo.needPage == true">
            LIMIT #{dataVo.startNum}, #{dataVo.pageSize}
        </if>
    </select>

    <select id="getDynamicTableDataByUuidList" parameterType="codedriver.framework.matrix.dto.MatrixDataVo"
            resultType="java.util.LinkedHashMap">
        SELECT
        `uuid`,
        <foreach collection="dataVo.columnList" item="column" separator=",">
            `${column}`
        </foreach>
        FROM codedriver_${tenantId}_data.`matrix_${dataVo.matrixUuid}`
        <where>
            <if test="dataVo.uuidList != null and dataVo.uuidList.size() > 0">
                `uuid` in
                <foreach collection="dataVo.uuidList" open="(" close=")" item="uuid" separator=",">
                    #{uuid}
                </foreach>
            </if>
        </where>
        <if test="dataVo.needPage == true">
            LIMIT #{dataVo.startNum}, #{dataVo.pageSize}
        </if>
    </select>

    <select id="getDynamicTableDataByColumnCount" parameterType="codedriver.framework.matrix.dto.MatrixDataVo"
            resultType="int">
        SELECT
        COUNT(`id`)
        FROM codedriver_${tenantId}_data.`matrix_${dataVo.matrixUuid}`
        <where>
            <include refid="searchDynamicTableDataSql"/>
        </where>
    </select>

    <select id="getDynamicTableDataByUuidCount" parameterType="codedriver.framework.matrix.dto.MatrixDataVo"
            resultType="int">
        SELECT
        COUNT(`id`)
        FROM codedriver_${tenantId}_data.`matrix_${dataVo.matrixUuid}`
        <where>
            <if test="dataVo.uuidList != null and dataVo.uuidList.size() > 0">
                `uuid` in
                <foreach collection="dataVo.uuidList" open="(" close=")" item="uuid" separator=",">
                    #{uuid}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getDynamicTableCellData" resultType="java.lang.String">
        SELECT `${targetColumn}`
        FROM codedriver_${tenantId}_data.`matrix_${matrixUuid}`
        WHERE `${sourceColumnVo.column}` = #{sourceColumnVo.value}
    </select>

    <select id="getDynamicTableCellDataMap" resultType="codedriver.framework.common.dto.ValueTextVo">
        SELECT
        `${targetColumn}` as `value`,
        `${sourceColumn}` as `text`
        FROM codedriver_${tenantId}_data.`matrix_${matrixUuid}`
        WHERE `${sourceColumn}` in
        <foreach collection="list" item="text" separator="," open="(" close=")">
            #{text}
        </foreach>
    </select>

    <select id="getDynamicRowDataByUuid" parameterType="codedriver.framework.matrix.dto.MatrixDataVo"
            resultType="java.util.LinkedHashMap">
        SELECT
        `uuid`,
        <foreach collection="dataVo.columnList" separator="," item="column">
            `${column}`
        </foreach>
        FROM codedriver_${tenantId}_data.`matrix_${dataVo.matrixUuid}`
        WHERE `uuid` = #{dataVo.uuid}
    </select>

    <select id="checkMatrixAttributeHasDataByAttributeUuidList" resultType="java.util.LinkedHashMap">
        SELECT
        <foreach collection="attributeUuidList" item="attributeUuid" separator=",">
            COUNT(`${attributeUuid}`) AS `${attributeUuid}`
        </foreach>
        FROM codedriver_${tenantId}_data.`matrix_${matrixUuid}`
    </select>

    <insert id="insertDynamicTableData">
        INSERT INTO codedriver_${tenantId}_data.`matrix_${matrixUuid}`
        <foreach collection="rowData" open="(" close=")" item="columnData" separator=",">
            `${columnData.column}`
        </foreach>
        VALUES
        <foreach collection="rowData" open="(" close=")" item="columnData" separator=",">
            #{columnData.value}
        </foreach>
    </insert>

    <insert id="insertDynamicTableDataForCopy">
        INSERT INTO codedriver_${tenantId}_data.`matrix_${targetMatrixUuid}`
        (`uuid`,
        <foreach collection="targetColumnList" item="targetColumn" separator=",">
            `${targetColumn}`
        </foreach>
        )
        SELECT
        MD5(UUID()),
        <foreach collection="sourceColumnList" item="sourceColumn" separator=",">
            `${sourceColumn}`
        </foreach>
        FROM codedriver_${tenantId}_data.`matrix_${sourceMatrixUuid}`
        ORDER BY `id`
    </insert>

    <update id="updateDynamicTableDataByUuid">
        UPDATE codedriver_${tenantId}_data.`matrix_${matrixUuid}`
        SET
        <foreach collection="rowData" item="columnData" separator=",">
            `${columnData.column}` = #{columnData.value}
        </foreach>
        WHERE `${uuidColumn.column}` = #{uuidColumn.value}
    </update>

    <delete id="deleteDynamicTableDataByUuid">
        DELETE
        FROM codedriver_${tenantId}_data.`matrix_${matrixUuid}`
        WHERE `uuid` = #{uuid}
    </delete>
</mapper>
