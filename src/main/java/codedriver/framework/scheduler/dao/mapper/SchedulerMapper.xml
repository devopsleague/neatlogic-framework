<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.scheduler.dao.mapper.SchedulerMapper">
	
	<resultMap id="scheduleMap" type="codedriver.framework.scheduler.dto.JobVo">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="classpath" property="classpath" />
		<result column="cron" property="cron" />
		<result column="repeat" property="repeat" />
		<result column="exec_count" property="execCount" />
		<result column="interval" property="interval" />
		<result column="is_active" property="isActive" />
        <result column="need_audit" property="needAudit"/>
		<result column="status" property="status" />
		<result column="begin_time" property="beginTime" />
		<result column="end_time" property="endTime" />
		<result column="last_fire_time" property="lastFireTime" />
		<result column="last_finish_time" property="lastFinishTime" />
		<result column="server_id" property="serverId" />
		<result column="trigger_type" property="triggerType" />
		<result column="next_fire_time" property="nextFireTime" />
		<collection property="propList" ofType="codedriver.framework.scheduler.dto.JobPropVo">
			<id column="prop_id" property="id" />
			<result column="prop_name" property="name" />
			<result column="prop_value" property="value" />
		</collection>
	</resultMap>

	<sql id="jobDetailSql">
		a.id,
		a.name,
		a.classpath,
		a.cron,
		a.repeat,
		a.interval,
		a.is_active,
		a.need_audit,
		a.status,
		a.server_id,
		a.trigger_type,
		a.begin_time,
		a.end_time,
		a.last_fire_time,
		a.last_finish_time,
		a.next_fire_time,
		a.exec_count
	</sql>

	<sql id="searchScheduleJobSql">
		WHERE
		1=1
		<if test="name != null and name != ''">
			AND a.name like CONCAT('%',#{name}, '%')
		</if>
		<if test="classpath != null">
			AND a.classpath = #{classpath}
		</if>
	</sql>
		
	<sql id="searchScheduleJobClassSql">
		WHERE
		1=1
		<if test="name != null and name != ''">
			AND a.name like CONCAT('%', #{name}, '%')
		</if>
		<if test="moduleName != null">
			AND a.module_name=#{moduleName}
		</if>
		<if test="type != null">
			AND a.type=#{type}
		</if>
	</sql>
	<select id="getJobById" resultMap="scheduleMap">
		SELECT
		<include refid="jobDetailSql" />
		,
		d.prop_name,
		d.prop_value,
		d.id as prop_id
		FROM schedule_job a
		LEFT JOIN schedule_job_prop d ON a.id = d.job_id
		WHERE a.id = #{value}
	</select>

	<select id="getJobByClasspath" resultMap="scheduleMap">
		SELECT
		<include refid="jobDetailSql" />
		,
		d.prop_name,
		d.prop_value,
		d.id AS prop_id
		FROM schedule_job a
		LEFT JOIN schedule_job_prop d ON a.id = d.job_id
		WHERE a.is_active = 'yes' AND a.status = 'running'
		AND a.classpath = #{classpath}
	</select>
	
	<select id="searchJobCount" resultType="int">
		SELECT
		count(1)
		FROM schedule_job a
		<include refid="searchScheduleJobSql" />
	</select>
	
	<select id="searchJobList" resultMap="scheduleMap">
		SELECT
		<include refid="jobDetailSql" />
		FROM schedule_job a
		<include refid="searchScheduleJobSql" />
		ORDER by a.name
		limit #{startNum}, #{pageSize}
	</select>
	
	<select id="getJobByName" resultMap="scheduleMap">
		SELECT
		<include refid="jobDetailSql" />
		,
		d.prop_name,
		d.prop_value,
		d.id AS prop_id
		FROM schedule_job a
		LEFT JOIN schedule_job_prop d ON a.id = d.job_id
		WHERE 1=1
		<if test="name != null and name != ''">
		and a.name = #{name}
		</if>
		<if test="id != null and id != ''">
		and a.id!=#{id}
		</if>
	</select>
	
	<select id="getJobClassByClasspath" resultType="codedriver.framework.scheduler.dto.JobClassVo">
		SELECT 
		a.`name` AS `name`,
		a.`classpath` AS `classpath`,
		a.`type` AS `type`,
		a.`module_name` AS `moduleName`
		FROM schedule_job_class a
		WHERE a.classpath=#{classpath}
	</select>
	
	<select id="searchJobClassCount" resultType="int">
		SELECT 
		count(1)
		FROM
		schedule_job_class a 
		JOIN module b ON a.module_name = b.name and b.is_active = 1 and b.status = 'success'
		<include refid="searchScheduleJobClassSql" />
	</select>
	
	<select id="searchJobClassList" resultType="codedriver.framework.scheduler.dto.JobClassVo">
		SELECT 
		a.`name` AS name,
		a.classpath AS classPath,
		a.module_name AS moduleName,
		a.`type` AS type,
		b.description AS moduleDesc
		FROM
		schedule_job_class a 
		JOIN module b ON a.module_name = b.name and b.is_active = 1 and b.status = 'success'
		<include refid="searchScheduleJobClassSql" />
		ORDER by a.name
		limit #{startNum}, #{pageSize}
	</select>
	
	<select id="searchJobAuditCount" resultType="int">
		SELECT count(1) FROM schedule_job_audit WHERE job_id = #{jobId}
	</select>
	
	<select id="searchJobAuditList" resultType="codedriver.framework.scheduler.dto.JobAuditVo">
		SELECT
        sja.id AS id,
        sja.job_id AS jobId,
        sja.start_time AS startTime,
        sja.end_time AS endTime,
        sja.log_path AS logPath,
        sja.state AS state
        FROM schedule_job_audit sja
        WHERE sja.job_id = #{jobId}
        ORDER BY sja.id DESC
        LIMIT #{startNum},#{pageSize}
	</select>
	
	<select id="getJobAuditLogById" resultType="codedriver.framework.scheduler.dto.JobAuditVo">
		SELECT
        sja.id AS id,
        sja.job_id AS jobId,
        sja.start_time AS startTime,
        sja.end_time AS endTime,
        sja.log_path AS logPath,
        sja.state AS state
        FROM schedule_job_audit sja
        WHERE sja.id = #{id}
	</select>
	
	<select id="getNewJobByServerId" resultType="codedriver.framework.scheduler.dto.ServerNewJobVo">
		SELECT 
		id, server_id AS serverId, job_id AS jobId, tenant_uuid AS tenantUuid
		FROM server_new_job 
		WHERE server_id=#{serverId}
	</select>
	
	<select id="getJobLockById" resultType="codedriver.framework.scheduler.dto.JobLockVo">
		SELECT 
		`job_id` AS jobId, 
		`lock`, 
		`server_id` AS serverId
		FROM schedule_job_lock 
		WHERE job_id=#{jobId}
		FOR UPDATE
	</select>
	
	<update id="updateJobById">
		UPDATE schedule_job
		SET
		<if test="name != null">
		name = #{name},
		</if>
		<if test="beginTime != null">
		begin_time = #{beginTime},
		</if>
		<if test="endTime != null">
		end_time = #{endTime},
		</if>
		<if test="triggerType != null">
		`trigger_type`=#{triggerType},
		</if>
		<if test="repeat != null">
		`repeat` = #{repeat},
		</if>
		<if test="cron != null">
		cron = #{cron},
		</if>
		<if test="interval != null">
		`interval` = #{interval},
		</if>
		<if test="serverId != null">
		server_id = #{serverId},
		</if>
		<if test="status != null">
		status = #{status},
		</if>
		<if test="isActive != null">
		is_active = #{isActive},
		</if>
		<if test="needAudit != null">
		need_audit = #{needAudit},
		</if>
		<if test="execCount != null">
		exec_count = #{execCount},
		</if>
		<if test="nextFireTime != null">
		next_fire_time = #{nextFireTime},
		</if>
		<if test="lastFinishTime != null">
		last_finish_time = #{lastFinishTime},
		</if>
		<if test="lastFireTime != null">
		last_fire_time = #{lastFireTime},
		</if>
		id = #{id}
		WHERE
		id = #{id}
	</update>
	
	<update id="updateJobClass">
		UPDATE schedule_job_class 
		SET
		name = #{name},
		classpath = #{classpath},
		module_name = #{moduleName}
		<if test="type != null and type != ''">
			,type = #{type}
		</if>
		WHERE classpath = #{classpath}
	</update>
	
	<update id="updateJobAudit">
        UPDATE schedule_job_audit 
        SET
        end_time = now(),
        state = #{state}
        <if test="logPath != null">
            , log_path = #{logPath}
        </if>
        WHERE id = #{id}
    </update>
    
	<update id="updateJobLockByJobId">
		UPDATE `schedule_job_lock` 
		SET 
		<if test="serverId != null">
		`server_id`=#{serverId},
		</if>
		`lock`=#{lock}
		WHERE `job_id`=#{jobId}
	</update>
	
	<update id="updateJobLockByServerId">
		UPDATE `schedule_job_lock` SET `lock`=#{lock}  WHERE `server_id`=#{serverId}
	</update>
		
	<insert id="insertJob">
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO schedule_job
		(
		`name`,
		classpath,
		begin_time,
		end_time,
		`trigger_type`,
		`repeat`,
		cron,
		`interval`,
		`status`,
		is_active,
		need_audit,
		server_id
		) VALUES (
		#{name},
		#{classpath},
		#{beginTime},
		#{endTime},
		#{triggerType},
		#{repeat},
		#{cron},
		#{interval},
		#{status},
		#{isActive},
		#{needAudit},
		#{serverId}
		)
	</insert>
	
	<insert id="insertJobProp">
		INSERT schedule_job_prop (job_id, prop_name, prop_value)
		VALUES (#{jobId}, #{name}, #{value})
	</insert>
	
	<insert id="insertJobClass">
		INSERT INTO schedule_job_class (name, classpath, module_name, type) VALUES (#{name}, #{classpath}, #{moduleName}, #{type})
	</insert>

	<insert id="insertJobAudit">
      <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
        SELECT LAST_INSERT_ID() AS id
      </selectKey>
        INSERT INTO schedule_job_audit (job_id,start_time,state,server_id)
        VALUES (#{jobId},now(),#{state},#{serverId})
    </insert>
    
    <insert id="insertJobLock">
    	INSERT INTO `schedule_job_lock`(`job_id`, `lock`, `server_id`) VALUES(#{jobId}, #{lock}, #{serverId})
    </insert>
    
    <insert id="insertServerNewJob">
    INSERT INTO server_new_job(server_id, job_id, tenant_uuid) VALUES(#{serverId}, #{jobId}, #{tenantUuid})
    </insert>
    
    <delete id="deleteJobById">
    DELETE a, b FROM schedule_job a LEFT JOIN schedule_job_prop b ON a.id = b.job_id WHERE a.id = #{id}
    </delete>

	<delete id="deleteJobPropByJobId">
		DELETE FROM schedule_job_prop WHERE job_id = #{jobId}
	</delete>
	
	<delete id="deleteJobLock">
		DELETE FROM schedule_job_lock WHERE job_id=#{jobId}
	</delete>
	
	<delete id="deleteServerNewJobById">
	DELETE FROM server_new_job WHERE id=#{id}
	</delete>
</mapper>
