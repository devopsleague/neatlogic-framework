<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.scheduler.dao.mapper.ScheduleMapper">
	
	<select id="getJobClassVoCount" resultType="int">
		SELECT 
		count(1)
		FROM schedule_job_class a
		WHERE a.id=#{id}
	</select>

	<resultMap id="scheduleMap" type="codedriver.framework.scheduler.dto.JobVo">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="cron" property="cron" />
		<result column="repeat" property="repeat" />
		<result column="execCount" property="execCount" />
		<result column="interval" property="interval" />
		<result column="isActive" property="isActive" />
        <result column="needAudit" property="needAudit"/>
		<result column="isPrivate" property="isPrivate" />
		<result column="status" property="status" />
		<result column="beginTime" property="beginTime" />
		<result column="endTime" property="endTime" />
		<result column="pauseTime" property="pauseTime" />
		<result column="lastFireTime" property="lastFireTime" />
		<result column="lastFinishTime" property="lastFinishTime" />
		<result column="serverId" property="serverId" />
		<result column="nextFireTime" property="nextFireTime" />
		<association property="jobClass" javaType="codedriver.framework.scheduler.dto.JobClassVo">
			<id column="classId" property="id" />
			<result column="className" property="name" />
			<result column="classPath" property="classPath" />
			<result column="moduleDesc" property="moduleDesc" />
			<result column="moduleName" property="moduleName" />
			<result column="classType" property="type" />
		</association>
		<collection property="propList" ofType="codedriver.framework.scheduler.dto.JobPropVo">
			<id column="propId" property="id" />
			<result column="propName" property="name" />
			<result column="propValue" property="value" />
		</collection>
	</resultMap>

	<sql id="jobDetailSql">
		a.id,
		a.name,
		a.cron,
		a.repeat,
		a.interval,
		a.is_active as isActive,
		a.need_audit as needAudit,
		a.is_private as isPrivate,
		a.status as status,
		a.server_id as serverId,
		DATE_FORMAT(a.begin_time, '%Y-%m-%d %H:%i:%s') as
		beginTime,
		DATE_FORMAT(a.end_time, '%Y-%m-%d %H:%i:%s')
		as endTime,
		DATE_FORMAT(a.lastfire_time, '%Y-%m-%d %H:%i:%s') as lastFireTime,
		DATE_FORMAT(a.pause_time, '%Y-%m-%d %H:%i:%s') as pauseTime,
		DATE_FORMAT(a.lastfinish_time, '%Y-%m-%d %H:%i:%s') as lastFinishTime,
		DATE_FORMAT(a.nextfire_time, '%Y-%m-%d %H:%i:%s') as nextFireTime,
		a.exec_count as execCount
	</sql>

	<select id="getJobByClassId" resultMap="scheduleMap">
		SELECT
		<include refid="jobDetailSql" />
		,
		d.prop_name AS propName,
		d.prop_value AS propValue,
		d.id AS propId
		FROM schedule_job a
		LEFT JOIN schedule_job_prop d ON a.id = d.job_id
		WHERE a.is_active = 1
		AND a.class_id = #{classId}
		AND a.server_id = #{serverId}
	</select>

	<select id="getJobById" resultMap="scheduleMap">
		SELECT
		<include refid="jobDetailSql" />
		,
		d.prop_name as propName,
		d.prop_value as propValue,
		d.id as propId
		FROM schedule_job a
		LEFT JOIN schedule_job_prop d ON a.id = d.job_id
		WHERE a.id = #{value}
	</select>

	<insert id="insertJobClass">
		INSERT INTO schedule_job_class (id,name, classpath, module_name, type) VALUES (#{id}, #{name}, #{classPath}, #{moduleName}, #{type})
	</insert>

	<update id="updateJobClass">
		UPDATE schedule_job_class 
		SET
		name = #{name},
		classpath = #{classPath},
		module_name = #{moduleName}
		<if test="type != null and type != ''">
			,type = #{type}
		</if>
		WHERE id = #{id}
	</update>

	<update id="updateScheduleJobTimeById">
		UPDATE schedule_job
		SET
		nextfire_time = #{nextFireTime},
		lastfinish_time = #{lastFinishTime},
		lastfire_time = #{lastFireTime},
		exec_count = exec_count + 1
		WHERE id = #{id}
	</update>

	<update id="updateJobStatus">
		UPDATE schedule_job
		SET status = #{status}
		<if test="status == 0">
			,exec_count = 0
		</if>
		WHERE
		id = #{id}
	</update>

    <update id="resetJobStatusNotStart">
		UPDATE schedule_job 
		SET
		status= CASE status WHEN 1 THEN -2 WHEN 0 THEN -3 ELSE -2 END,
		exec_count = CASE status WHEN -2 THEN 0 END
		WHERE server_id = #{value}
	</update>

</mapper>
