<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.heartbeat.dao.mapper.ServerMapper">

	<select id="getInactivatedServer" resultType="codedriver.framework.heartbeat.dto.ServerClusterVo">
		SELECT
		scl.`host`, scl.`server_id` AS serverId, scl.`status`
		FROM server_status scl
		JOIN server_counter scot ON scot.`to_server_id`=scl.`server_id` AND scot.`from_server_id`=#{currentServerId} AND scot.`counter` >= #{threshold}
		WHERE scl.`status`='startup'
	</select>

	<select id="getServerByStatus" resultType="codedriver.framework.heartbeat.dto.ServerClusterVo">
		SELECT
		scl.`host`, scl.`server_id` AS serverId,scl.`status`
		FROM server_status scl
		WHERE scl.`status`=#{status}
	</select>

	<select id="getServerByServerId" resultType="codedriver.framework.heartbeat.dto.ServerClusterVo">
		SELECT
		scl.`host`, scl.`server_id` AS serverId,scl.`status`
		FROM server_status scl
		WHERE scl.`server_id`=#{serverId}
		FOR UPDATE
	</select>

	<select id="getServerCounterIncreaseByFromServerId" resultType="codedriver.framework.heartbeat.dto.ServerCounterVo">
		SELECT
		${fromServerId} AS fromServerId, scl.`server_id` AS toServerId, IFNULL(sco.`counter` + 1, 1) AS counter
		FROM `server_status` scl
		LEFT JOIN `server_counter` sco ON sco.`to_server_id`=scl.`server_id` AND sco.`from_server_id`=#{fromServerId}
		WHERE scl.`status`='startup' AND scl.`server_id` != #{fromServerId}
	</select>

	<update id="updateServerByServerId">
		UPDATE server_status
		SET
			status = #{status}
		WHERE server_id = #{serverId}
	</update>

	<update id="resetCounterByToServerId">
		UPDATE server_counter
		SET
		counter=0
		WHERE to_server_id=#{toServerId}
	</update>

	<update id="updateServerCounterIncrementByOneByFromServerId" parameterType="java.lang.Integer">
		UPDATE `server_counter` SET `counter` = `counter` + 1 WHERE `from_server_id` = #{value};
	</update>

	<insert id="insertServer">
		INSERT INTO server_status(host, server_id, status)
		VALUES(#{host}, #{serverId}, #{status})
		ON DUPLICATE KEY UPDATE
		host = #{host},
		status = #{status}
	</insert>

	<insert id="replaceServerCounter">
		REPLACE INTO server_counter(from_server_id, to_server_id, counter) VALUES(#{fromServerId}, #{toServerId}, #{counter})
	</insert>

	<delete id="deleteCounterByServerId">
		DELETE FROM server_counter WHERE from_server_id=#{serverId} OR to_server_id=#{serverId}
	</delete>
</mapper>