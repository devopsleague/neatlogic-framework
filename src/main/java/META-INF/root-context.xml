<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="false" xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd">

	<bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName">
			<value>${db.driverClassName}</value>
		</property>
		<property name="url">
			<value>${db.url}</value>
		</property>
		<property name="username">
			<value>${db.username}</value>
		</property>
		<property name="password">
			<value>${db.password}</value>
		</property>
		<property name="validationQuery">
			<value>${conn.validationQuery}</value>
		</property>
		<property name="testOnBorrow">
			<value>${conn.testOnBorrow}</value>
		</property>
		<property name="maxIdle">
			<value>${conn.maxIdle}</value>
		</property>
		<property name="initialSize">
			<value>${conn.initialSize}</value>
		</property>
	</bean>

	<context:component-scan base-package="codedriver.framework" use-default-filters="false">
		<context:include-filter type="annotation" expression="codedriver.framework.common.RootComponent" />
	</context:component-scan>

	<bean id="dataSource" class="codedriver.framework.common.CodeDriverDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="master" value-ref="dataSourceMaster" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceMaster" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:i18n/messages</value>
				<value>classpath:i18n/ValidationMessages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="-1"></property>
		<property name="maxInMemorySize" value="40960"></property>
	</bean>


	<bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" />

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="codedriver.framework.**.dao.mapper" />
	</bean>
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:codedriver/framework/dao/config/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:codedriver/framework/**/dao/mapper/*.xml</value>
			</list>
		</property>
	</bean>

	<bean id="DatasourceInitializer" class="codedriver.framework.startup.DatasourceInitializer"></bean>

	<bean id="TenantModuleFilter" class="codedriver.framework.filter.TenantModuleFilter"></bean>

	<bean id="JsonWebTokenValidFilter" class="codedriver.framework.filter.JsonWebTokenValidFilter"></bean>


</beans>